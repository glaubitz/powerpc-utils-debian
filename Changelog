powerpc-utils-1.3.8
=====================================================================

commit ed7f7c84ba320fac543f88b766587328b5ede63b
Author: Mingming Cao <mmc@linux.vnet.ibm.com>
Date:   Tue Aug 11 16:19:49 2020 -0700

    Do not use automatic method (DHCP, PPP, etc) when bond interface is setup
    
     When creating bond, by default the ipv4.method is auto, set to dhcp
     In the case of mutiple HNV interfaces, this can case bond interfaces deactive and
     active again and again.
    
     So here Set default ipv4 method to disable. Bond is created without IP .
    
     User can configure static IP manually with
     nmcli con mod id <bond-name> ipv4.method manual ipv4.address 192.168.2.203/24
    
    As long as each interface is on a different network, then they should be able to
    all use dhcp, but the dhcp server would need to support all these different
    networks and hand out ips on the different subnets
    
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 9a4a4a2ec9bb8e9d4e69bd2c482d904bc3b27d7f
Author: Mingming Cao <mmc@linux.vnet.ibm.com>
Date:   Mon Jul 27 21:37:38 2020 -0700

    Allow hcnqrydev return success when sr-iov VFs are not active
    
    When the sr-iov VF nextwork interfact in the bond is not up, that means
    it is failover to the backup virtual network device already. We should
    allow hcnqrydev return success in this case, in other words, means it is
    safe to dlpar remove sr-iov VFs.
    
    Also add more system and network status info in show_hcnstatus() and move it to
    the end of main function.
    
    Signed-off-by: Mingming Cao <mmc@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 6bd1f8acdbef807738e2270e3974ceb3b892666d
Author: David Michael <fedora.dm0@gmail.com>
Date:   Fri Aug 7 14:14:57 2020 -0400

    ofpathname: Remove the dependency on bc
    
    The only use of bc is to convert between decimal and hexadecimal
    integers, but this functionality is supported by POSIX shell
    arithmetic expansion and a POSIX-compatible printf program.  Since
    this script uses #!/bin/bash, the printf utility is a bash builtin,
    so it won't even add a dependency on an external printf program
    (which is provided by the required coreutils package anyway).
    
    Signed-off-by: David Michael <fedora.dm0@gmail.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit bd8dd36b33cda0d0a72111a9a53fc5fb9a73cdb4
Author: Tyrel Datwyler <tyreld@linux.ibm.com>
Date:   Thu Jul 16 15:36:25 2020 -0700

    man: add manpage for the drmgr utility
    
    Historically we have discouraged users from invoking drmgr from the commandline
    outside of PCI hotplug, and as such provided no documentation. However, for the
    sake of those brave powerusers willing to risk putting their system in a state
    inconsistent from that of theassociated managment interface lets add a manpage
    with the basic documentation of the various usage options for each of the
    dynamic reconfiguration connector types.
    
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 1b27e043f00f8f636bdbc6853d7058ee0a63abf3
Author: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
Date:   Wed Jun 17 21:28:38 2020 +0530

    lparstat: Update man page with -E option
    
    lparstat -E option reports the actual and normalized system utilization
    based on the PURR/SPURR registers. Update the lparstat man page too with
    the -E option details.
    
    Reported-by: Pavithra Prakash <pavrampu@in.ibm.com>
    Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 0a9b1f2309291c82e68eeb866174aeb676329ed4
Author: Tyrel Datwyler <tyreld@linux.ibm.com>
Date:   Mon Jun 15 19:51:30 2020 -0500

    drmgr: use in-kernel dlpar facility for CPU's when available
    
    The helper kernel_dlpar_exists() now queries whether the kernel supports
    dlpar based on connector/drc_type. As such allow dlpar of cpu's via the
    kernel interface when available by default.
    
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 267474a488d1a957e7704feb2910cdea2310c8b7
Author: Tyrel Datwyler <tyreld@linux.ibm.com>
Date:   Mon Jun 15 19:51:29 2020 -0500

    drmgr: query in-kernel dlpar support by DRC connector type
    
    Support to initiate kernel facilitated dlpar for CPU and MEM was
    introduced into drmgr back in 2016 with commit bbc5fc0 however, this
    proved problematic for CPU as most distros didn't have in kernel CPU
    dlpar support yet. As a result CPU support was disabled with commit
    a97c566.
    
    The main issue is that drmgr blindly tests for the existence of
    /sys/kernel/dlpar to identify in kernel dlpar support. This test doesn't
    reveal if support goes beyond MEM and includes CPU. This further
    complicates adding new connector types such as PHB, PCI, and SLOT down
    the road, and backwards compatability of newer drmgr on older kernels.
    
    The /sys/kernel/dlpar attribute was extended by the following kernel
    commit torvalds/linux@673bc43 that introduced a comma separated list of
    device support.
    
    Update drmgr utility to use this mechanism to determine which
    device/connector/drc_types are supported by in kernel dlpar.
    
    1.) For the case where /sys/kernel/dlpar does not exist use legacy dlpar
    facilities.
    
    2.) For the case where /sys/kernel/dlpar exists but does not
    reading we assume only memory support for in kernel and use legacy
    all other types.
    
    3.) For the case where /sys/kernel/dlpar exists and is readable we parse
    the returned list for supported devices and fall back to legacy
    facilities for anything not in the list.
    
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 871646f79bdd6c119c87561952dcf5b528419f67
Author: Mingming Cao <mmc@linux.vnet.ibm.com>
Date:   Sun Jun 28 09:41:51 2020 -0600

    Add hcnmgr init systemd service hcn-init.service
    
    After LPAR back online, add service automatically
    configure hybrid network created at inactive time.
    
    Update the build process to include the service in build.
    configure --with-systemd
    OR
    rpmbuild -ba powerpc-utils.spec --with systemd
    
    Enable this service after reboot.
    
    Signed-off-by: Mingming Cao <mmc@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit ae08f34eb8197dee7489fc73dc2e29aa5bbe84bc
Author: Mingming Cao <mmc@linux.vnet.ibm.com>
Date:   Sat Jun 27 08:38:13 2020 -0600

    Support inactive migration with migratable SR_IOV
    
    HMC supports adding migratable sr-iov when LPAR is inactive.
    This allows inactive LPAR migrates with SR_IOV VFs. HMC will
    generate unique HCNID and PHYP the migratable sr-iov device
    and it's backup virtual device vnic or veth with same ibm
    property ibm,hcn-id. This is done while the partion is inactive.
    
    When LPAR backs online, the OS is responsible to find out the
    new migritable SR_IOV configured during LPAR was inactive. This
    makes the new SR_IOV added eligible for migration, or able to
    re-configure SR_IOV with HCN post migration.
    
    Added function in hcnmgr to scan the device-tree, find
    migratable SR_IOV that has no hybrid network being configured,
    setting up the active-back bonding with backup matching vnic or
    veth. Add new SR_IOV and its backing devices as slave. Skip the HCN
    has already been configured online before.
    
    Signed-off-by: Mingming Cao <mmc@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit ed574ffb81e23169d3327e1f8f22fdfb9ad74390
Author: Mingming Cao <mmc@linux.vnet.ibm.com>
Date:   Fri Jun 26 17:02:00 2020 -0600

    Tools to support migrtable SR_IOV hybrid virtual network
    
    A LPAR that utilizes an SR-IOV logical port (physical device) cannot be
    migrated. To allow SR_IOV eligiable for live partition migration, HMC can
    configures a virtual device (virtual ethernet or virtual NIC) as a backup
    for each SR-IOV logical port and performs failover network operations to
    the virtual device before migration. After migration, then performs
    failover network operations again to the SR-IOV logical ports.
    
    When HMC configure an migratiable SR_IOV device, the hypervisor will set
    unique hybrid network ID (HCN ID) propterty for the SR_IOV and backup
    virtual device. And instruct Guest OS to configre hybrid network.
    Guest OS will able to recoganize them and configure hybrid
    network. This patch introduces new commands from HMC to linux to configure an
    active-backup bonding with the SR-IOV logical port as the primary device and
    a virtual device such as a virtual Ethernet device or vNIC device as the
    backup device.
    
    hcncfrdrc -- configure migratable SR_IOV hybrid virtual network (HCN) before
                    or right after migration
    hcnqrydev -- pre-migration, query SR_IOV device has active backup virtual device
    hcnrmdev -- remove migritable SR_IOV device from HCN right before migration
    hcnrmhcn -- clean up hybrid virtual network when remove migratable SR_IOV
    hcnversion -- returns current HCN support version back to HMC
    
    Signed-off-by: Mingming Cao <mmc@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit b289196aa9d9cd02c5d1b7e46cfa6403ea4fbbad
Author: Joel Stanley <joel@jms.id.au>
Date:   Mon Jul 13 13:20:25 2020 -0700

    Update smt snooze delay documentation
    
    Mostly remove it now that it is not used. A mention is left in the
    readme so archaeologists can work out where it went.
    
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    [tyreld: fixed type of setting in README]
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit c788e4802205265e653a884e2f0d2dce17e03d2c
Author: Joel Stanley <joel@jms.id.au>
Date:   Mon Jul 13 13:20:24 2020 -0700

    ppc64_cpu: Remove smt_snooze_delay
    
    The kernel has not supported setting the snooze delay through this API
    since at least 2014 (v3.14). The sysfs file is present for
    compatibility, but it has no effect.
    
    The lack of this sysfs file means we must use a different method for
    ppc64_cpu to detect the smt state of the box. It now uses the
    threads_per_cpu count from the device tree.
    
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 3a4617187b300b8c369ca0e30deeb22143dfc2c8
Author: Joel Stanley <joel@jms.id.au>
Date:   Mon Jul 13 13:20:23 2020 -0700

    Modify is_smt_capable to not use smt_snooze_delay
    
    The sysfs file is present for compatibility, but it has no effect. Use
    the presence of more than one thread per cpu, which comes from the device
    tree, to determine SMT capability.
    
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 7289eb429e293e33418cc68c922e9c2f61ffd82f
Author: Joel Stanley <joel@jms.id.au>
Date:   Thu Jul 9 17:20:34 2020 -0700

    travis: Add basic CI configuration
    
    This builds the applications on ppc64le with librtas.
    
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit ab1462b9c5644e8dbf75b42e69ffa13b1b7c2370
Author: Joel Stanley <joel@jms.id.au>
Date:   Thu Jul 9 17:20:33 2020 -0700

    gitignore: don't ignore .*
    
    This includes files such as .travis.yml file that will be part of the
    repository.
    
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 937780a5fcbd887352e458f32a860c67164a2c14
Author: Tyrel Datwyler <tyreld@linux.ibm.com>
Date:   Wed Jun 24 17:25:35 2020 -0500

    ofpathname: make goto_dir canonicalize directory argument
    
    Commit c97fe35b5b6d "ofpathname: speed up l2of_scsi()" attempted to
    optimize the look up of scsi devices by restricting the base directory
    input of the 'find' command to /sys/class/block instead of /sys. This
    works as intended for raw scsi disks such as sda, but broke for scsi disk
    partitions such as sda1.
    
    (0) root @ linux-td1r: /root/powerpc-utils
    $ ./scripts/ofpathname /dev/sda1
    : Logical device "/dev/sda1" does not appear
                to be configured.
    
    (1) root @ linux-td1r: /root/powerpc-utils
    $ ./scripts/ofpathname /dev/sda
    /vdevice/v-scsi@30000066/disk@8100000000000000
    
    The differences in looking up sda1 via /sys/class/block vs /sys:
    
    (0) root @ linux-td1r: /root/powerpc-utils
    $ find /sys/class/block -name sda1
    /sys/class/block/sda1
    
    (0) root @ linux-td1r: /root/powerpc-utils
    $ find /sys -name sda1
    /sys/devices/vio/30000066/host0/target0:0:1/0:0:1:0/block/sda/sda1
    /sys/class/block/sda1
    
    In the end /sys/class/block/sda1 is just a symlink to sda1 under /sys/devices/vio/...
    
    (0) root @ linux-td1r: /root/powerpc-utils
    $ ll /sys/class/block/sda1
    lrwxrwxrwx 1 root root 0 Jun 22 18:56 /sys/class/block/sda1 ->
    	../../devices/vio/30000066/host0/target0:0:1/0:0:1:0/block/sda/sda1
    
    However, ofpathname assumes that by moving up to the parent we will
    eventually find the raw disk device, in the above example sda,  and this
    will only happen for paths under /sys/devices in the case of scsi disk
    partitions.
    
    Fix this regression by using readlink in goto_dir() to canonicalize the
    path name of the device while following all symlinks.
    
    Fixes: c97fe35b5b6d ("ofpathname: speed up l2of_scsi()")
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 60d9f54b13b75feee3fd7b25a92b24d0d97ea984
Author: Tyrel Datwyler <tyreld@linux.ibm.com>
Date:   Tue Jun 9 12:48:38 2020 -0700

    drmgr: don't bother with hp children for non PCI slots
    
    Only PCI devices have hotpluggable children. So, there is no need to call
    disable_hp_children() or release_hp_children() for non-PCI devices. In
    particular this causes messages for VIO slots, that while harmless, could lead a
    user to misinterpret as actual errors.
    
    linux-xej6:~/powerpc-utils # drmgr -c slot -r -s U8408.E8E.10A7ACV-V1-C3
    Validating I/O DLPAR capability...yes.
    failed to open /sys/bus/pci/slots/U8408.E8E.10A7ACV-V1-C3/power: No such file or directory
    failed to disable hotplug children
    
    In remove_slot() check that the device type is PCI_DLPAR_DEV before calling
    (disable|release)_hp_children().
    
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit cac0e6b68136d9e18eecb3321b9141f98c819b97
Author: Tyrel Datwyler <tyreld@linux.ibm.com>
Date:   Tue Jun 9 12:34:41 2020 -0700

    README: add Subscribe link and updated ppc64-diag repo link
    
    Added a mailing list subscribe link. This is helpful for users/developers tyring
    to subscribe to the list who may want to use an email address other than a gmail
    address. The list is hosted through googlegroups and there is no obvious way
    to subscribe using a non-gmail address through their web interface.
    
    The ppc64-diag package has since been migrate from Sourceforge to Github. So the
    repository location link has been updated accordingly.
    
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit f8f2f09c413838fe9f0b30478de5d08bdb3e95aa
Author: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
Date:   Sun Apr 19 11:35:08 2020 +0200

    ofpathname: Add support for Mac-compatible OF pathnames
    
    On Macintosh systems, OpenFirmware path follow a slightly
    different syntax as compared to other OF systems. In particular,
    the disk ID is not preceeded by the string "disk" and - on
    SATA systems - the path does not contain the BUS ID as
    "scsi@ID" but rather the plug ID in the form "@ID".
    
    Signed-off-by: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
    Reviewed-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 3fb2c44e220c3051b2593f27105a94208266775d
Author: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
Date:   Sun Apr 19 11:35:07 2020 +0200

    ofpathname: Add support for the plug ID of a SCSI/SATA host
    
    Signed-off-by: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
    Reviewd-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit a3555d297e963c86b0b9e0e266c5aa8ae6827d87
Author: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
Date:   Sun Apr 19 11:35:06 2020 +0200

    ofpathname: Add partition support to l2of_ide() and l2of_scsi()
    
    Currently, only l2of_nvme() supports handling of partitions which
    will print the partition number at the end of an OF path. However,
    this feature is also useful for IDE and SCSI targets as well and
    mandatory for Macintosh systems.
    
    Signed-off-by: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
    Reviewed-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit b38076f3022dd0ec9c86df7c792285686b049b2a
Author: Tyrel Datwyler <tyreld@linux.ibm.com>
Date:   Fri May 29 18:08:04 2020 -0500

    drmgr: don't treat pmig as unsupported when -m is omitted
    
    If drmgr is invoked for the pmig connector type but the -m option is
    not specified get_command() treats the connector type as unsupported.
    
    (1) root @ linux-td1r: /root/powerpc-utils
    Dynamic reconfiguration is not supported for connector type "8" on this system
    At least one action must be specified
    
    Add a case block to catch DRC_TYPE_MIGRATION connector type.
    
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit bbfe5fac8bad092221768291936932142527bd41
Author: Tyrel Datwyler <tyreld@linux.ibm.com>
Date:   Thu May 21 15:56:56 2020 -0500

    drmgr: fix segfault on unsupported connector type
    
    % drmgr -c pmig
    Received signal 11, attempting to cleanup and exit
    
    Reading symbols from /usr/sbin/drmgr...
    Reading symbols from /usr/lib/debug/usr/sbin/drmgr-1.3.7.1-3.12.1.ppc64le.debug...
    (gdb) set args -c pmig
    (gdb) r
    Starting program: /usr/sbin/drmgr -c pmig
    Missing separate debuginfos, use: zypper install glibc-debuginfo-2.26-13.45.1.ppc64le
    
    Program received signal SIGSEGV, Segmentation fault.
    0x00007fffb7d742d4 in __strlen_power8 () from /lib64/libc.so.6
    (gdb) bt
        at /usr/include/bits/stdio2.h:77
    
    The default switch section of get_command() is meant to catch defined
    connector types that currently have no support. However, the error
    messages passes usr_drc_type (an integral value) to a %s conversion
    modifier resulting in a bad address dereference.
    
    Fix up to use a %d conversion modifier instead.
    
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 1a611c866010792e31a33e2d520f19418af70855
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Thu May 28 18:22:41 2020 -0500

    powerpc-utils.spec: configure with --disable-werror
    
    Generally we're not interested in halting the build for compiler
    warnings when producing RPMs.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 3d8a7f5e2e3b735570ab99bb3a340ff7e0c14841
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Thu May 28 18:22:40 2020 -0500

    add option --disable-werror to configure
    
    Commit a6929691fd25 ("treat compiler warnings as errors") imposed
    -Werror unconditionally in Makefile.am, in order to prevent the
    addition of new warnings to the build. While it's important to keep
    the project reasonably warning-clean, it's also necessary to provide
    downstream packagers and users in a variety of environments more
    flexibility in this area.
    
    Keep -Werror by default but make it configurable. The user may specify
    --disable-werror at configure time to prevent compiler warnings from
    halting the build. This is a reasonably common way to deal with
    this (examples include glibc, gdb, json-c).
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 0f7abc7f08e088bbc9448b3a77def7c6da61c507
Author: Michal Suchanek <msuchanek@suse.de>
Date:   Wed May 27 09:52:07 2020 -0700

    ofpathname: Fix udevadm location
    
    The canonical location for udevadm is /usr/bin.
    
    Signed-off-by: Michal Suchanek <msuchanek@suse.de>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 3c5a57b5e4dcc661f14a2c6bd11d2203922b66c7
Author: Michal Suchanek <msuchanek@suse.de>
Date:   Wed May 27 09:52:06 2020 -0700

    bootlist: Fix redirection of error messages.
    
    The redirection added in commit 73839d6bab4d ("powerpc-utils: Suppress
    errors reading kernel files") does nothing for echo. I assume the intent
    was to print the error messages to stderr.
    
    Fixes: 73839d6bab4d ("powerpc-utils: Suppress errors reading kernel files")
    
    Signed-off-by: Michal Suchanek <msuchanek@suse.de>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 5a1e57363554fb609c27e18e9163956580f6632c
Author: Michal Suchanek <msuchanek@suse.de>
Date:   Wed May 27 09:52:05 2020 -0700

    Fix ofpathname: Could not retrieve logical device name for Open Firmware path
    
    With commit 73839d6bab4d ("powerpc-utils: Suppress errors reading kernel files")
    the return status of tr rather than ofpathname is tested.
    
    Fixes: 73839d6bab4d ("powerpc-utils: Suppress errors reading kernel files")
    
    Signed-off-by: Michal Suchanek <msuchanek@suse.de>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 85fe6bf04463ea1dc85d8108f068c1cd1b3609cf
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Mon May 18 00:05:58 2020 -0500

    add generated smtstate files to .gitignore
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit a6929691fd2578f3049877d2e54a60dd86f07957
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Mon May 18 00:05:57 2020 -0500

    treat compiler warnings as errors
    
    In order to keep the project warning-clean, add -Werror to AM_CFLAGS.
    
    If needed, this can be inhibited at build time by specifying
    -Wno-error:
    
      $ make CFLAGS=-Wno-error
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 9d851ad2e44da07775b9ea3a547488ce04b11027
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Mon May 18 00:05:56 2020 -0500

    drmgr/common_ofdt: correct stringop-truncation warning
    
    With -Wall -Werror GCC 9.3.1 emits:
    In file included from /usr/include/string.h:495,
                     from src/drmgr/common_ofdt.c:24:
    In function ‘strncpy’,
        inlined from ‘drc_info_connectors_v2’ at src/drmgr/common_ofdt.c:338:4,
        inlined from ‘get_drc_info’ at src/drmgr/common_ofdt.c:431:8:
    /usr/include/bits/string_fortified.h:106:10: error: ‘__builtin_strncpy’ specified bound 48 equals destination size [-Werror=stringop-truncation]
      106 |   return __builtin___strncpy_chk (__dest, __src, __len, __bos (__dest));
    
    The GCC manual's documentation for -Wstringop-truncation suggests
    correcting this case by specifying 'sizeof buf - 1' for the strncpy
    bound and setting the last element of the buffer to 'NUL', which is
    sufficient.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 6def5726b1785195121219b1af46c3270270ff9e
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Mon May 18 00:05:55 2020 -0500

    cpu_info_helpers: fix format-truncation warning
    
    GCC 9.3.1 warns:
    
    In file included from src/common/cpu_info_helpers.c:34:
    src/common/cpu_info_helpers.c: In function ‘get_cpu_info’:
    src/common/cpu_info_helpers.h:29:25: warning: ‘%s’ directive output may be truncated writing up to 255 bytes into a region of size 105 [-Wformat-truncation=]
       29 | #define INTSERV_PATH    "/proc/device-tree/cpus/%s/ibm,ppc-interrupt-server#s"
          |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    src/common/cpu_info_helpers.h:29:25: note: in definition of macro ‘INTSERV_PATH’
       29 | #define INTSERV_PATH    "/proc/device-tree/cpus/%s/ibm,ppc-interrupt-server#s"
          |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    src/common/cpu_info_helpers.h:29:49: note: format string is defined here
       29 | #define INTSERV_PATH    "/proc/device-tree/cpus/%s/ibm,ppc-interrupt-server#s"
          |                                                 ^~
    src/common/cpu_info_helpers.c:140:5: note: ‘snprintf’ output between 51 and 306 bytes into a destination of size 128
      140 |     snprintf(path, sizeof(path), INTSERV_PATH, de->d_name);
    
    It's unlikely that any known device tree would have CPU nodes with
    names long enough too result in the overrun this is warning about, but
    it's easy enough to address by enlarging the on-stack path buffer.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 5f253c8a04734501822ca77bbace48ca38e14d5d
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Mon May 18 00:05:54 2020 -0500

    drmgr/drslot_chrp_phb: fix format-overflow warnings (part 2)
    
    GCC 9.3.1 warns:
    
    src/drmgr/drslot_chrp_phb.c: In function ‘drslot_chrp_phb’:
    src/drmgr/drslot_chrp_phb.c:172:33: warning: ‘%s’ directive writing up to 255 bytes into a region of size 235 [-Wformat-overflow=]
      172 |   rc = sprintf(hpdev->path, "%s/%s", SYSFS_PCI_DEV_PATH,
    
    Address this by dynamically allocating struct hpdev->path using
    asprintf.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 1ec98d4168511af85217404d2a6167185c430a5f
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Mon May 18 00:05:53 2020 -0500

    drmgr/drslot_chrp_phb: fix format-overflow warnings (part 1)
    
    GCC 9.3.1 warns:
    
    src/drmgr/drslot_chrp_phb.c: In function ‘disable_os_hp_children_recurse’:
    src/drmgr/drslot_chrp_phb.c:244:26: warning: ‘__builtin___sprintf_chk’ may write a terminating nul past the end of the destination [-Wformat-overflow=]
      244 |   sprintf(devspec, "%s/%s", ofpath + strlen(OFDT_BASE),
          |                          ^
    
    src/drmgr/drslot_chrp_phb.c:203:20: warning: ‘%s’ directive writing 6 bytes into a region of size between 0 and 255 [-Wformat-overflow=]
      203 |  sprintf(path, "%s/%s", hpdev->path, "remove");
          |                    ^~                ~~~~~~~~
    
    Address these by simply enlarging the too-small on-stack buffers.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit e1ff85745e76346c7df00f5e1e981de78feed4a6
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Mon May 18 00:05:52 2020 -0500

    drmgr/drslot_chrp_mem: fix format-overflow warnings
    
    GCC 9.3.1 warns:
    
    src/drmgr/drslot_chrp_mem.c: In function ‘get_mem_scn_state’:
    src/drmgr/drslot_chrp_mem.c:950:19: warning: ‘/state’ directive writing 6 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]
      950 |  sprintf(path, "%s/state", mem_scn->sysfs_path);
          |                   ^~~~~~
    In file included from /usr/include/stdio.h:867,
                     from src/drmgr/drslot_chrp_mem.c:21:
    /usr/include/bits/stdio2.h:36:10: note: ‘__builtin___sprintf_chk’ output between 7 and 1030 bytes into a destination of size 1024
       36 |   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
          |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       37 |       __bos (__s), __fmt, __va_arg_pack ());
          |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    src/drmgr/drslot_chrp_mem.c: In function ‘set_mem_scn_state’:
    src/drmgr/drslot_chrp_mem.c:993:19: warning: ‘/state’ directive writing 6 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]
      993 |  sprintf(path, "%s/state", mem_scn->sysfs_path);
          |                   ^~~~~~
    In file included from /usr/include/stdio.h:867,
                     from src/drmgr/drslot_chrp_mem.c:21:
    /usr/include/bits/stdio2.h:36:10: note: ‘__builtin___sprintf_chk’ output between 7 and 1030 bytes into a destination of size 1024
       36 |   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
          |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       37 |       __bos (__s), __fmt, __va_arg_pack ());
          |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    In these cases simply enlarging the on-stack buffer suffices.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 7823f5b4d0b8c48d620a68418df77b4eba785151
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Mon May 18 00:05:51 2020 -0500

    drmgr/drslot_chrp_hea: fix format-overflow warning
    
    GCC 9.3.1 warns:
    
    src/drmgr/drslot_chrp_hea.c: In function ‘hotplug_port’:
    src/drmgr/drslot_chrp_hea.c:136:18: warning: ‘%s’ directive writing up to 1023 bytes into a region of size 128 [-Wformat-overflow=]
      136 |  sprintf(fname, "%s/%s", hea->sysfs_dev_path,
          |                  ^~
    In file included from /usr/include/stdio.h:867,
                     from src/drmgr/drslot_chrp_hea.c:24:
    		 /usr/include/bits/stdio2.h:36:10: note: ‘__builtin___sprintf_chk’ output between 12 and 1036 bytes into a destination of size 128
    
    In this case just enlarge the on-stack buffer.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit a209e103b3cd43163da8a05157371e0e22a9f4fb
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Mon May 18 00:05:50 2020 -0500

    drmgr/common_pci: fix format-overflow warnings
    
    GCC 9.3.1 warns:
    
    src/drmgr/common_pci.c: In function ‘init_node’:
    src/drmgr/common_pci.c:350:27: warning: ‘%s’ directive writing up to 255 bytes into a region of size between 0 and 1023 [-Wformat-overflow=]
      350 |   sprintf(child_path, "%s/%s", node->ofdt_path, de->d_name);
          |                           ^~
    In file included from /usr/include/stdio.h:867,
                     from src/drmgr/common_pci.c:25:
    /usr/include/bits/stdio2.h:36:10: note: ‘__builtin___sprintf_chk’ output between 2 and 1280 bytes into a destination of size 1024
       36 |   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
          |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       37 |       __bos (__s), __fmt, __va_arg_pack ());
          |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    src/drmgr/common_pci.c: In function ‘pci_remove_device’:
    src/drmgr/common_pci.c:1288:20: warning: ‘%s’ directive writing 6 bytes into a region of size between 0 and 1023 [-Wformat-overflow=]
     1288 |  sprintf(path, "%s/%s", node->sysfs_dev_path, "remove");
          |                    ^~                         ~~~~~~~~
    In file included from /usr/include/stdio.h:867,
                     from src/drmgr/common_pci.c:25:
    /usr/include/bits/stdio2.h:36:10: note: ‘__builtin___sprintf_chk’ output between 8 and 1031 bytes into a destination of size 1024
    
    Avoid these by replacing fixed length stack buffers with dynamic
    allocations.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 7a5d2cfcdbc6d9f7a757e10a408dd11d0abdbd3c
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Mon May 18 00:05:49 2020 -0500

    drmgr/common_cpu: dynamicallly allocate cache_info->path
    
    GCC 9.3.1 warns:
    
    src/drmgr/common_cpu.c: In function ‘init_cache_info.isra.0’:
    src/drmgr/common_cpu.c:556:38: warning: ‘%s’ directive output may be truncated writing up to 1023 bytes into a region of size 256 [-Wformat-truncation=]
      556 |    snprintf(cache->path, DR_BUF_SZ, "%s", path);
          |                                      ^~   ~~~~
    In file included from /usr/include/stdio.h:867,
                     from src/drmgr/common_cpu.c:22:
    /usr/include/bits/stdio2.h:67:10: note: ‘__builtin_snprintf’ output
    between 1 and 1024 bytes into a destination of size 256
    
    Instead of bloating the cache_info structure to accommodate longer
    path strings and avoid this (legitimate) warning, dynamically allocate
    them.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 39441c4b53245496d61680386628e689c38b4a34
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Mon May 18 00:05:48 2020 -0500

    drmgr/common: add const to char * function parameters
    
    Add const qualifier in a couple of places where it's plain that the
    argument is a path string that isn't altered by the function through
    that pointer. This will facilitate changes to come.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 456a96cbb511ef2b0424e1649b82594c27d0df27
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Mon May 18 00:05:47 2020 -0500

    rtas_dbg: address string format truncation warning
    
    GCC 9.3.1 warns:
    
    src/rtas_dbg.c: In function ‘get_rtas_tokens’:
    src/rtas_dbg.c:137:26: error: ‘%s’ directive output may be truncated writing up to 255 bytes into a region of size 105 [-Werror=format-truncation=]
      137 |   snprintf(dir, 128, "%s/%s", OFDT_RTAS_PATH, dp->d_name);
          |                          ^~
    In file included from /usr/include/stdio.h:867,
                     from src/rtas_dbg.c:30:
    /usr/include/bits/stdio2.h:67:10: note: ‘__builtin___snprintf_chk’ output between 24 and 279 bytes into a destination of size 128
    
    The lazy but least risky change to make here is to simply enlarge the
    (oddly named) on-stack buffer to accommodate the longest possible
    result.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 7a65ca0551b387a228c70e224b1db3626a603e92
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Mon May 18 00:05:46 2020 -0500

    serv_config: ensure nul-termination of parameter strings
    
    GCC 9.3.1 warns:
    
    In file included from /usr/include/string.h:495,
                     from src/serv_config.c:50:
    In function ‘strncpy’,
        inlined from ‘update_value’ at src/serv_config.c:861:4:
    /usr/include/bits/string_fortified.h:106:10: warning: ‘__builtin_strncpy’ specified bound 4998 equals destination size [-Wstringop-truncation]
    
    This means that a value string with length 4998 or greater not
    including a terminating nul byte would result in this copy leaving the
    destination buffer unterminated, which violates the specification for
    ibm,set-system-parameter.
    
    In this case we need only reduce the bound by 1.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 7ecf9ebc3a2f18670cf11b1020e1cbe9def96d26
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Mon May 18 00:05:45 2020 -0500

    serv_config: use correct length for system parameter string data
    
    "val" here is a character string; sizeof(val) yields the size of the
    pointer. The ibm,set-system-parameter call expects the prepended
    length field to reflect the string length including the terminating
    NUL byte.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit f00392a9ae2c43b2c061674a10a4eb28141672ba
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Mon May 18 00:05:44 2020 -0500

    lparstat: ensure nul-termination of sysentry->value strings
    
    GCC 9.3.1 warns:
    
    In function ‘strncpy’,
        inlined from ‘parse_lparcfg’ at src/lparstat.c:273:4:
    /usr/include/bits/string_fortified.h:106:10: warning:
    ‘__builtin_strncpy’ specified bound 64 equals destination size
    [-Wstringop-truncation]
    
    This means that parsed value strings of length SYSDATA_VALUE_SZ or
    more are not truncated and nul-terminated after copying into the
    sysentry data structure, which violates assumptions made elsewhere in
    this file (e.g. get_sysdata()).
    
    Correct this by zeroing the value buffer and copying at most
    SYSDATA_VALUE_SZ - 1 characters.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 3a9cf1c525d3489a739b30340f44d9bbc1ecce37
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Mon May 18 00:05:43 2020 -0500

    nvram: suppress stringop-truncation warning
    
    GCC 9.3.1 warns:
    
    In function ‘strncpy’,
        inlined from ‘update_of_config_var’ at src/nvram.c:1376:2:
    /usr/include/bits/string_fortified.h:106:10: warning:
    ‘__builtin_strncpy’ output truncated before terminating nul copying as
    many bytes from a string as its length [-Wstringop-truncation]
    
    The code does take care to nul-terminate the copied string; in this
    case the GCC manual suggests using memcpy instead of strncpy. No
    functional change intended.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 05b83d51943997e04c94cae3d132ee7951345a07
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Mon May 18 00:05:42 2020 -0500

    define _GNU_SOURCE project-wide
    
    This project uses several nonstandard GNU-specific extensions which
    are exposed only when _GNU_SOURCE is defined.  Examples include
    CPU_SET(3) and related APIs by necessity and asprintf(3) for
    convenience.
    
    Currently _GNU_SOURCE is used in a piecemeal fashion, meaning you have
    to add it to the source file when you introduce a use of asprintf, for
    example. Also, note that it is used incorrectly in a couple of places:
    it must appear before any headers are included for it to work reliably.
    
    There's not much justification for the code duplication and lack of
    uniformity here. Put '-D _GNU_SOURCE' in AM_CPPFLAGS for a more
    consistent experience across the project's C code.
    
    This will cause all C code to be built with _GNU_SOURCE.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 65b8e5af04bed31846c1462c48ac940822d70789
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Mon May 18 00:05:41 2020 -0500

    place preprocessor flags in AM_CPPFLAGS
    
    Setting the include path belongs in AM_CPPFLAGS, not AM_CFLAGS.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit c97fe35b5b6d767b88419fa2084a59e986ac3da0
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Mon Apr 27 20:48:04 2020 -0500

    ofpathname: speed up l2of_scsi()
    
    There is no need to search the entire /sys hierarchy for kernel device
    names like "sda". We know that if it is present it will be in
    /sys/class/block.
    
    In an environment with more than 800 scsi devices, this brings the
    execution time for a command like "lsdevinfo -F name -c -q
    parent=host1" from over 20 minutes to under two minutes.
    
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit c6c0a86c41d81e85a2e68587ce280bdcff40d079
Author: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
Date:   Fri May 15 11:13:11 2020 +0530

    lparstat: Use get_delta_value() helper
    
    Use get_delta_value(), helper, to calculate the delta of interested
    values instead of duplicating it in various functions.  This reduces
    the amount of duplication and makes code more readable.
    
    Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit fc785bea981598948a9a8f94e926f52f2ee3c6a4
Author: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
Date:   Fri May 15 11:13:10 2020 +0530

    lparstat: Add support for cpu-hotplug
    
    For optimizing the read of sysfs file, the file descriptors are
    assigned at the beginning of the run but they do not change dynamically
    in event of a cpu hotplug, resulting under-estimated load average in
    case of new cpus onlined or error in case of cpu removed. This can be
    solved by checking for the online cpus every interval and re-assign
    the file descriptors again with new set of cpu on hotplug event.
    
    Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit f3ac228ff410bca41a544032dc597df030f6c95f
Author: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
Date:   Fri May 15 11:13:09 2020 +0530

    lparstat: Add switch to print Scaled metrics
    
    Add '-E' command line switch to print scaled version of meterics, this
    switch prints CPU utilization/Idle based on Actual (PURR) and Scaled
    (SPURR) values along with the current effective frequency of the system.
    
    output:
    
    ~ # lparstat -E 1 3
    
    System Configuration
    type=Dedicated mode=Capped smt=8 lcpu=2 mem=4324928 kB cpus=0 ent=2.00
    
    ---Actual---                 -Normalized-
    %busy  %idle   Frequency     %busy  %idle
    ------ ------  ------------- ------ ------
      0.10  99.90  2.13GHz[ 70%]   0.10  69.91
      0.07  99.92  2.10GHz[ 69%]   0.05  68.95
      0.08  99.92  2.10GHz[ 69%]   0.05  68.95
    
    Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 0ed656ae4a268569fec68df6f2ca860ea57b9026
Author: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
Date:   Fri May 15 11:13:08 2020 +0530

    lparstat: Move displaying system configuration details to new func
    
    System configuration details is required while displaying the
    scaled metrics too. Move it to a new function, to be called by both
    default, scaled metrics too.
    
    Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 4120f4426d38a8bfa158ad0ab0dfa9282ebf76e6
Author: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
Date:   Fri May 15 11:13:07 2020 +0530

    lparstat: Add helpers to derive PURR/SPURR values
    
    For every interval specified by the user, the PURR/SPURR delta values
    are needed to be calculated. Add helpers to derive them.
    
    Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 59b77efef68c42cd623399e80b42d6bc4df1279c
Author: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
Date:   Fri May 15 11:13:06 2020 +0530

    lparstat: Add helper to calculate scaled timebase
    
    Timebase is used to derive system wide CPU utilization, scale it to
    the number of online cores too like the PURR/SPURR registers values
    accumulated across all online CPU cores.  This helper also scales the
    timebase register value to the interval passed.
    
    Timebase = (Timebase * Elapsed Time) * online cores
    
    Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 1b298478da4df562fcb42bbef88693203175fe64
Author: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
Date:   Fri May 15 11:13:05 2020 +0530

    lparstat: Derive effective frequency
    
    Effective/current operating frequency is derived by following:
    
    Effective frequency = (delta SPURR / delta PURR) * nominal frequency
    
    it required to calculate the scaled variants using SPURR, whereas
    the currently computed values based on the PURR.
    performed.
    
    Effective frequency is derived from PURR/SPURR values, hence call
    get_frequency() after function updating sysfs values.
    
    Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 30231beaba58a175e776597a1f07b35bc26fcfce
Author: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
Date:   Fri May 15 11:13:04 2020 +0530

    lparstat: Add helper function to calculate delta
    
    Add a helper function for one of the most often used arithmetics of
    calculating delta of a sysentry.
    
    Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit cdbf3d5ae2414ad0475a4b2a8120b6514148fb9f
Author: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
Date:   Fri May 15 11:13:03 2020 +0530

    lparstat: Read SPURR, Idle_{PURR, SPURR} values
    
    Parse per-cpu
    /sys/devices/system/cpu/cpu/{spurr, idle_purr, idle_spurr} files to
    accumulate system wide SPURR, Idle PURR, Idle SPURR values like
    PURR value captured in /proc/powerpc/lparcfg.  Calculating scaled
    utilization metrics, need them.
    
    Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit b0a3cb2dfd5ee772525feaa5a6a6d58426008a19
Author: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
Date:   Fri May 15 11:13:02 2020 +0530

    lparstat: Assign file descriptors to speed up read
    
    For every sampling interval, three per-cpu sysfs files is read to
    capture spurr, idle_purr and idle_spurr values. Every read takes
    three file operation such as open, read, close, future this scales
    with number of CPUs in the system.  To reduce the latency involved
    in open and close, assign a permanent file descriptors per online cpu.
    
    without caching file descriptors
    ---------------------------------
    
    System Configuration
    type=Dedicated mode=Capped smt=8 lcpu=4 mem=8302464 kB cpus=0 ent=4.00
    
    ---Actual---                 -Normalized-
    %busy  %idle   Frequency     %busy  %idle
    ------ ------  ------------- ------ ------
      0.04  99.95  3.16GHz[100%]   0.04  99.95      1.1003219
      0.15  99.85  3.16GHz[100%]   0.15  99.85      1.1003222
      0.04  99.96  3.16GHz[100%]   0.04  99.96      1.1003179
      0.03  99.97  3.16GHz[100%]   0.03  99.97      1.1003183
      0.03  99.97  3.16GHz[100%]   0.03  99.97      1.1003166
    
    with caching file descriptors
    ------------------------------
    
    System Configuration
    type=Dedicated mode=Capped smt=8 lcpu=4 mem=8302464 kB cpus=0 ent=4.00
    
    ---Actual---                 -Normalized-
    %busy  %idle   Frequency     %busy  %idle
    ------ ------  ------------- ------ ------
      0.03  99.96  3.16GHz[100%]   0.03  99.97      1.1001793
      0.03  99.97  3.16GHz[100%]   0.03  99.97      1.1001775
      0.03  99.97  3.16GHz[100%]   0.03  99.97      1.1001775
      0.02  99.98  3.16GHz[100%]   0.02  99.98      1.1001766
      0.02  99.98  3.16GHz[100%]   0.02  99.98      1.1001762
    
    Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 182301acd44afe1ca5a813f80f5e1d0427295b26
Author: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
Date:   Fri May 15 11:13:01 2020 +0530

    lparstat: Capture nominal frequency
    
    Capture the nominal frequency/clock from the /proc/cpuinfo. This value
    will be used later to calculate the effective/current frequency at which
    the processor is running.
    
    Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 3182b2a1e97c631430b37eb85cb203223ff836c8
Author: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
Date:   Fri May 15 11:13:00 2020 +0530

    lparstat: Read the online cores
    
    The accumulation of PURR/SPURR values are total of all online CPU in
    the system, hence the timebase also needs to be scaled to the number
    of cores. Add a helper to read the online cores.
    
    Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 95737c3ebb5884ddb516f0958bb7521ff0bf6014
Author: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
Date:   Fri May 15 11:12:59 2020 +0530

    lparstat: Remove ppc64_cpu tool dependency
    
    get_smt_mode(), calls ppc64_cpu tool to get the current SMT mode, this
    method of probing has its disadvantages like tightly coupling lparstat
    with ppc64_cpu to mention one.  Use, the internal library to fetch this
    information.
    
    Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 35dddf079a8fdcde5ada145b67702545041f6f22
Author: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
Date:   Fri May 15 11:12:58 2020 +0530

    common/cpu_info_helpers: library to capture CPU information
    
    ppc64_cpu tool does a lots of heavy lifting in finding the information
    about the underlying CPU topology and various other details.  These
    details might be required by other tools, probing the underlying
    platform for similar details.  Moving such functions to a common
    library, allows sharing across ppc64_cpu and others tools, instead of
    multiple implementation of functions capturing same information.
    
    Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit e517954a4caa66f321c4cd7a1481c5024c931a75
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Thu Mar 26 13:09:04 2020 +0530

    powerpc-utils: Add vcpustat utility
    
    Add a new command 'vcpustat' to display virtual cpu dispatch statistics
    for Shared Processor LPARs. The vcpu dispatch statistics are enabled and
    read through /proc/powerpc/vcpudispatch_stats interface from the kernel.
    The statistics made available through this interface includes
    information on vcpu dispatch dispersions relative to the previous
    dispatch, as well as relative to the vcpu's home node/chip as indicated
    by the Power hypervisor.
    
    'vcpustat' enables monitoring this statistic at customizable intervals.
    By default, the statistics are presented as a percentage of the total
    dispatches in each monitoring interval. In addition, '-n' option can be
    used to display numeric values, while '-r' allows displaying the raw
    values from the kernel.
    
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 1643ac6026d8aca4c774f4f6aa396bf5a06f3049
Author: Jose Ricardo Ziviani <joserz@linux.ibm.com>
Date:   Thu Mar 19 00:48:07 2020 -0300

    Include smtstate.service and smtstate in the build system
    
    The new feature provided by smtstate and smtstate.service are not
    built by default. During the build phase, it's required to use:
    
    configure --with-systemd
    OR
    rpmbuild -ba powerpc-utils.spec --with systemd
    
    to have it shipped in.
    
    Signed-off-by: Jose Ricardo Ziviani <joserz@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 5cc433a8ec611c967a2defceef4d52863a326d43
Author: Jose Ricardo Ziviani <joserz@linux.ibm.com>
Date:   Thu Mar 19 00:48:05 2020 -0300

    Add smtstate script to persist SMT changes
    
    This patch introduces smtstate script responsible to save and restore
    the current SMT state into /var/lib/powerpc-utils/smt.state.
    
    Signed-off-by: Jose Ricardo Ziviani <joserz@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit d055ccead0baf8a92eb50317029077b1cb3b923b
Author: Jose Ricardo Ziviani <joserz@linux.ibm.com>
Date:   Thu Mar 19 00:48:06 2020 -0300

    Add a systemd service to persist SMT state across reboots
    
    The service smtstate.service exists to persist the SMT state across reboots
    by using the smtstate script. It is disabled by default.
    
    Signed-off-by: Jose Ricardo Ziviani <joserz@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit e3ab5276c51a2128d4816ac1ed75ca8262d99b3c
Author: Michael W. Bringmann <mwb@linux.ibm.com>
Date:   Tue Mar 24 15:36:01 2020 -0700

    lsdevinfo: Fix bash command substitution warning
    
    This patch is to remove the warning,
    
    /usr/sbin/lsdevinfo: line 278: warning: command substitution: ignored null
    byte in input.
    
    observed in some shells.  This warning appears to be a new feature
    in Bash-4.4.
    
    Signed-off-by: Michael W. Bringmann <mwb@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit d1eefb4a449b4b8a5044f27a9fe273e980b78951
Author: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
Date:   Mon Feb 24 20:04:08 2020 +0530

    update_flash: Fix warning
    
    With recent bash `update_flash -v -f <image>` is throwing below warning.
    
    update_flash_nv: line 316: warning: command substitution: ignored null byte in input
    
    bash enhancement: https://lists.gnu.org/archive/html/bug-bash/2016-09/msg00015.html
    
    This patch fixes above issue.
    
    Signed-off-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 4413de5d9d4af1e4cb0cb4d05e2b2bbbf24702e6
Author: Tyrel Datwyler <tyreld@linux.ibm.com>
Date:   Tue Mar 24 16:33:15 2020 -0500

    Revert "Add smtd script, state file, and man page"
    
    This reverts commit fbf513cf2200bd41174e9761166cc74dc61ccfa8.
    
    Reverted all 4 original patches for persisting SMT state across reboots in
    preperation for merging a new and different implmentation.
    
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 3df4e19af0f4e1ee6df3e984639c7dc79c787bf9
Author: Tyrel Datwyler <tyreld@linux.ibm.com>
Date:   Tue Mar 24 16:32:58 2020 -0500

    Revert "Add services to save and restore SMT state"
    
    This reverts commit bf58a942041f7d77e58ca64f494395e20e350fb5.
    
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit ea47b5235bf890dd0def29bd346ee227bd7242f3
Author: Tyrel Datwyler <tyreld@linux.ibm.com>
Date:   Tue Mar 24 16:31:59 2020 -0500

    Revert "Include smtd feature in the build system"
    
    This reverts commit 77052b18673306227f05d4ac88bf23ade3299e39.
    
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit 5d1c575fcb0f3ffb61f9b60146ce8d9c7e95f44e
Author: Tyrel Datwyler <tyreld@linux.ibm.com>
Date:   Tue Mar 24 16:30:39 2020 -0500

    Revert "Include smtd feature in RPM package"
    
    This reverts commit d6a939cb6c1ff87aec1498a67620666ec5116510.
    
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

commit d6a939cb6c1ff87aec1498a67620666ec5116510
Author: Jose Ricardo Ziviani <joserz@linux.ibm.com>
Date:   Tue Nov 12 14:13:51 2019 -0300

    Include smtd feature in RPM package
    
    Assuming that all RPM distros that support PowerPC uses systemd, this
    patch includes the new smtd script and services in the package.
    
    Signed-off-by: Jose Ricardo Ziviani <joserz@linux.ibm.com>
    Reviewed-by: Paul Clarke <pc@us.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 77052b18673306227f05d4ac88bf23ade3299e39
Author: Jose Ricardo Ziviani <joserz@linux.ibm.com>
Date:   Tue Nov 12 14:13:50 2019 -0300

    Include smtd feature in the build system
    
    This patch adds smtd, smt.state, and systemd services in the build
    system. Argument --with-systemd is required to enable the feature.
    
    Signed-off-by: Jose Ricardo Ziviani <joserz@linux.ibm.com>
    Reviewed-by: Paul Clarke <pc@us.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit bf58a942041f7d77e58ca64f494395e20e350fb5
Author: Jose Ricardo Ziviani <joserz@linux.ibm.com>
Date:   Tue Nov 12 14:13:49 2019 -0300

    Add services to save and restore SMT state
    
    Two systemd services are included:
    
    [1] smt_init runs smtd script to set SMT based on smt.state file.
    It's configured to run in an early stage of the systemd init process
    aiming to perform before user workloads.
    ...
    [  OK  ] Started SMT automatic initialization service.
    [  OK  ] Reached target Basic System.
    ...
    
    [2] smtd will daemonize pyinotify, provided by python-inotify package,
    which will listen to cpu0/online changes and trigger /sbin/smtd to save
    its current state.
    
    Signed-off-by: Jose Ricardo Ziviani <joserz@linux.ibm.com>
    Reviewed-by: Paul Clarke <pc@us.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit fbf513cf2200bd41174e9761166cc74dc61ccfa8
Author: Jose Ricardo Ziviani <joserz@linux.ibm.com>
Date:   Tue Nov 12 14:13:48 2019 -0300

    Add smtd script, state file, and man page
    
    The main goal is to provide a mechanism to save/restore current SMT
    state across system reboots. The script has two functions:
    
    * set SMT: read from /var/lib/powerpc-utils/smt.state and set SMT using
    ppc64_cpu.
    * save SMT: save current ppc64_cpu --smt value in smt.state file.
    
    Signed-off-by: Jose Ricardo Ziviani <joserz@linux.ibm.com>
    Reviewed-by: Paul Clarke <pc@us.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 73839d6bab4da24350a60105b7b2c3a6cc7d3a15
Author: Michael Bringmann <mwb@linux.vnet.ibm.com>
Date:   Fri Jul 26 09:10:51 2019 -0500

    powerpc-utils: Suppress errors reading kernel files
    
    A problem was observed with the evaluation of the '${devspec} by
    the script 'ofpathname'.  The problem occurred during installation
    to an nvme device as follows:
    
    02:29:41,669 INF program: Running... ofpathname /dev/nvme0n1p1
    02:29:41,922 INF program: /sbin/ofpathname: line 684: warning: command substitution: ignored null byte in input
    
    Detailed examination showed that instances of the device-tree
    property "/namespace/name" within one or more of the PCI devices
    contained null bytes which were echoed along with the value e.g.
    
    [root device-tree]# cat /proc/device-tree/pci@800000020000029/pci1014,637@0/namespace/name | hexdump -C
    00000000  6e 61 6d 65 73 70 61 63  65 00                    |namespace.|
    0000000a
    [root device-tree]#
    
    This patch provides improves handling of errors within that script,
    and by some of the follow-on uses of the tool by the 'bootlist' script.
    
    * Deal with error messages returned sometimes by evaluation
      of ${devspec} in 'ofpathname'.
    * Strip embedded nulls from values provided by kernel files.
    * Redirect more error messages to /dev/null
    
    Signed-off-by: Michael Bringmann <mwb@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit ea4db66e941720313af2c6b1afb32a74f3e360f4
Author: Michael Bringmann <mwb@linux.vnet.ibm.com>
Date:   Tue Sep 10 14:31:42 2019 -0500

    Safe bootlist update
    
    This patch is intended to prevent problems with identifying or parsing
    the bootlist devices from propagating into the system NVRAM configuration.
    A number of such problems have been observed when processing USB devices.
    
    * If 'bootlist' encounters an invalid OF_DEVPATH entry, it will print
      an notice, but still continue on to write invalid data to nvram.
    
      Changed to abort the script before writing bad data to nvram.
    
    * When 'ofpathname' encounters an invalid 'devspec' file or invalid
      value in a 'devspec' file, while trying to find the logical pathname
      for a scsi device, it may continue to return the invalid 'devspec'
      value to the caller/invoking script.
    
      Changed to abort with an error message instead of returning that
      invalid value to a caller like 'bootlist'.
    
      Example:
      # bootlist -m normal sdb
      # bootlist -m normal -o
      Could not translate (null)/scsi@0/sd@0,0 to logical device name
    
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit b0586b5938e9d371e55671422b2f0a5d2cd10c54
Author: Michael Bringmann <mwb@linux.vnet.ibm.com>
Date:   Wed Oct 2 16:54:52 2019 -0500

    powerpc-utils/devtree: Parse 'ibm,drc-info' property
    
    Parse new DRC Info: Define data structures to support parsing
    the new "ibm,drc-info" device tree property.  Integrate the new
    property information into the existing search mechanisms of the
    userspace 'drmgr' driver.
    
    Signed-off-by: Michael Bringmann <mwb@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>

powerpc-utils-1.3.7
=====================================================================

commit 1d4147370a148b3a2ebadcf02abd4a6c9a763e6d
Author: Sourabh Jain <sourabhjain@linux.ibm.com>
Date:   Sat Apr 27 10:18:32 2019 +0530

    lparstat: add an option to print the lparstat report similar to legacy lparstat tool
    
    This patch adds a new command line option (-l, --legacy) to allow
    users to print the report similar to legacy lprastat tool without
    affecting existing report format.
    
    Changes done to make the current report format similar to legacy
    report format are listed below:
    
    1) The memory attribute will be printed in MB instead of KB.
    2) cpus attribute will be referred as psize in legacy report format
       and only printed in shared lpar environment.
    3) On legacy lparstat tool the lcpu attribute is a combination of
       two attributes, smt and number of online processor. Formula used
       to calculate the lcpu is given below.
                  lcpu = smt * number of online processors
    
    Signed-off-by: Sourabh Jain <sourabhjain@linux.ibm.com>
    Reviewed-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit dd6da6b329bac2743d1c80b5556b494c923c11ad
Author: Michael Bringmann <mwb@linux.vnet.ibm.com>
Date:   Mon Apr 29 11:25:18 2019 -0500

    scripts: Improve handling of errors from subsidiary scripts
    
    This patch is to fix the handling of errors by 'lsdevinfo' from
    invocations of 'ofpathname' that also encounter errors.  Error
    messages from 'ofpathname' were being sent through 'stdout', and
    interpreted as valid data by a number of script instructions in
    'lsdevinfo'.  Following is an example of such a failure when the
    error results were forwarded to an associated HMC.
    
        2019-02-19 22:05:38.212 [TID-5f68--72195] VIOS_CACHE: CacheVios.<-> saveCacheData 3*9080-M9S*130A068 cmd=lsdevinfo -c -q physloc=U78CD.001.FZH0128-P1-C1-T3-S4 -F status
        2019-02-19 22:05:38.212 [TID-5f68--72195] RMC_VIOS: PIRmcViosClient.stdErr=/bin/ls: cannot access /sys/class/net/ofpathname:: No such file or directory
        /bin/ls: cannot access Could: No such file or directory
        /bin/ls: cannot access not: No such file or directory
        /bin/ls: cannot access retrieve: No such file or directory
        /bin/ls: cannot access logical: No such file or directory
        /bin/ls: cannot access device: No such file or directory
        /bin/ls: cannot access name: No such file or directory
        /bin/ls: cannot access for: No such file or directory
        /bin/ls: cannot access Open: No such file or directory
        /bin/ls: cannot access Firmware: No such file or directory
        /bin/ls: cannot access path: No such file or directory
        /bin/ls: cannot access "/pci@800000029008004/ethernet@0"./device/driver: No such file or directory
    
    This patch makes the following changes:
    
    * Redirects the error messages from 'ofpathname' to stderr
    * Adds more checks to 'lsdevinfo' to filter out stderr text
      from input to various parsing commands.
    
    Signed-off-by: Michael Bringmann <mwb@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 8b7978b114e5df89218daa9b4b48cc0e918ba917
Author: Sourabh Jain <sourabhjain@linux.ibm.com>
Date:   Mon Feb 4 16:15:14 2019 +0530

    lparstat: introduce the help command line option to print lparstat usage
    
    This patch adds a function to print the usage of lparstat. Also,
    a new element is added to structure option to handle long command
    line argument for help.
    
    Signed-off-by: Sourabh Jain <sourabhjain@linux.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit bc928b06605371b72c7fe8ec7e81886114a9e9d4
Author: Sourabh Jain <sourabhjain@linux.ibm.com>
Date:   Thu Jan 31 14:25:21 2019 +0530

    lparstat: restrict the physc and entc attribute values to two decimal places
    
    Print format of physical processors consumed (physc) and percentage of
    the entitled capacity consumed (entc) attributes has changed from six
    decimal places to two.
    
    The least possible value allowed for processor entitlement to a LPAR
    is 0.05 so printing physc and entc values with such a high precision
    is incorrect.
    
    Signed-off-by: Sourabh Jain <sourabhjain@linux.ibm.com>
    Reviewed-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit b5fea40ac98d1c9a685d98c011e88180c31ca0be
Author: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
Date:   Wed Feb 20 15:44:17 2019 +0530

    man/update_flash: Add details to extract rpm format image
    
    Signed-off-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit f567bdb8b2a3effdb4af06e2cf935b0350f2f881
Author: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
Date:   Wed Feb 20 15:44:09 2019 +0530

    man/update_flash: Fix man page
    
    Add heading to NOTES section.
    
    Signed-off-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

powerpc-utils-1.3.6
=====================================================================

commit 01c9cbcf4face809cb6953bc3cd2a30cd075ed16
Author: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>
Date:   Thu Dec 6 17:30:38 2018 -0600

    lparstat: correct calculation of physc to use tbr
    
    Currently phsyc is calculated using the sampled PURR values from lparcfg and
    a derived timebase that lparstat itself calculates. However, both the Timer
    Facilities section in Book III of the ISA and PAPR outline that this resource
    calcuation is done by computing the ratio of the PURR delta and the Timebase
    Register delta for the sampled period.
    
    I've sent a patch upstream to the kernel list to also export the Timebase
    Register (tbr) in /proc/ppc64/lparcfg [1]. Use this value for calculating
    physc value when running on a kernel that exposes tbr.
    
    [1] https://patchwork.ozlabs.org/patch/1009906/
    
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 7be598c7ffdf1f934e43af88a42e8b1e6391f91e
Author: Aravinda Prasad <aravinda@linux.vnet.ibm.com>
Date:   Thu Dec 6 16:21:10 2018 +0530

    lparstat: Enable desired and maximum memory stats
    
    This patch enables the display of desired memory
    and maximum memory stats with lparstat -i flag.
    The value for these stats are already available
    in /proc/powerpc/lparcfg file.
    
    v2: updated man pages.
    
    Signed-off-by: Aravinda Prasad <aravinda@linux.vnet.ibm.com>
    Reviewed-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit d1576f88dcc7008bcd3448172caff1b928be1254
Author: Aravinda Prasad <aravinda@linux.vnet.ibm.com>
Date:   Thu Sep 6 15:01:04 2018 +0530

    lparstat: Show available physical processors in the shared pool
    
    This patch adds the "app" field that displays the available
    processors in the shared pool.
    
    The platform provides the summation of the physical processor
    pool idle cycles through H_PIC hypercall. This data is updated
    in the "pool_idle_time" field of the /proc/ppc64/lparcfg file.
    This patch derives the "app" from the "pool_idle_time" field.
    
    v2: Handle fgets() errors
    
    Signed-off-by: Aravinda Prasad <aravinda@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit fac783d18d61af232b957af259a15ed231f6869b
Author: Juliet Kim <julietk@linux.vnet.ibm.com>
Date:   Thu Sep 13 15:57:42 2018 -0400

    ppc64_cpu: Limit number of CPUs for frequency calculation
    
    The patch limits the number of threads used for CPU frequency calculation
    to the minimum of either the actual number of CPUs in the system or
    CPU_SETSIZE(currently 1024). In other words, if the number of CPUs in the
    system is less than CPU_SETSIZE, a thread is created for each of the CPUs,
    otherwise only CPU_SETSIZE threads are created. This is being done because
    sched_setaffinity() will only work on CPU_SETSIZE CPUs, anything over the
    limit is not supported.
    
    Signed-off-by: Juliet Kim <julietk@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 3ce17a36d10bc09a49af9d56ceadad09708b46f1
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Thu Jul 19 23:12:40 2018 -0500

    lsslot: Add ibm,dynamic-memory-v2 parsing capability
    
    In order to support reporting memory LMB information the lsslot
    command needs to know how to parse the ibm,dynamic-memory-v2
    property. This patch adds this support to the shared
    drslot_chrp_mem.c file.
    
    In order to prevent the drmgr command from parsing this v2 property
    a new flag is introduce, is_lsslot_cmd. The reason for this is that
    we do not support memory DLPAR for ibm,dynamic-memory-v2 from
    userspace.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 6a1b89bb7e9f58262da0f08906674cae3efc7bfc
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Thu Jul 19 23:12:34 2018 -0500

    lsslot: Split dynamic-memory v1 parsing into separate routine
    
    In preparation for support of parsing the new ibm,dynamic-memory-v2
    device tree property, this patch splits the current code that
    parses the current v1 version of the device tree propertry into
    its own routine.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit c3f583a9f62ee33080523c2d1d076fdf8d5520e7
Author: Mamatha Inamdar <mamatha4@linux.vnet.ibm.com>
Date:   Tue Jul 17 21:24:31 2018 +0530

    Patch to display logical name using bootlist -o option
    
    Problem:
    System unable to boot when OF device path name's set using -r option
    EX: # bootlist  -m normal -r /vdevice/v-scsi@30000010/disk@8100000000000000
    
    Solution:
    This patch is to set respective Open firmware device path names(-r)
    and logical device path names(-o) using bootlist
    
    Test Results:
    
    Without patch:
    
    # bootlist  -m normal -r /vdevice/v-scsi@30000010/disk@8100000000000000
    sda
    
    # bootlist  -m normal -r
    sda
    
    # bootlist  -m normal -o
    Could not translate sda to logical device name
    
    With patch:
    
    # ./bootlist -m normal -r /vdevice/v-scsi@30000010/disk@8100000000000000
    /vdevice/v-scsi@30000010/disk@8100000000000000
    
    # ./bootlist -m normal -r
    /vdevice/v-scsi@30000010/disk@8100000000000000
    
    # ./bootlist -m normal -o
    sda
    
    # ./bootlist -m normal -r sda
    /vdevice/v-scsi@30000010/disk@8100000000000000
    
    # ./bootlist -m normal -r
    /vdevice/v-scsi@30000010/disk@8100000000000000
    
    # ./bootlist -m normal -o
    sda
    
    Signed-off-by: Mamatha Inamdar <mamatha4@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

powerpc-utils-1.3.5
=====================================================================

commit 35d01313b5d03069bf8cabbcdfe39944da4ae65c
Author: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>
Date:   Thu Jun 14 16:08:50 2018 -0700

    lsslot: add DRC Type description strings for new U.2 PCIe slots
    
    Two new PCI slot types can be reported from firmware in the DRC Type
    property for a PCI device. The following are the slot descriptions for
    DRC types 43 and 44.
    
    43	A U.2 PCI Express Rev 3 4x lane slot with 4x lanes connected
    44	A U.2 PCI Express Rev 4 4x lane slot with 4x lanes connected
    
    Currently, the lsslot utility reports "Unknown" for the description of
    these pci devices. Update the php_slot_type_msg[] with these new slot
    descriptions so that lsslot correctly reports them.
    
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 02249d0ce03ae6b06ca5dac47a53bdeb8986ac81
Author: John Allen <jallen@linux.vnet.ibm.com>
Date:   Thu Mar 15 11:12:05 2018 -0500

    lsslot: Remove extra call to free_lmbs in failure cases
    
    This reverts commit e6f476d32c33f5b8e364f930c467785495eeb0ce.
    
     From my inspection, get_lmbs frees the lmb_list correctly in all failure
    cases. The extra call to free_lmbs will cause the lmb_list to be freed
    twice. I think it's likely that the original coverity issue that this was
    meant to address was a false positive. Reverting the change has been seen
    to resolve a seg fault.
    
    Signed-off-by: John Allen <jallen@linux.vnet.ibm.com>
    Reviewed-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 05bb057b8953d536a952ff86eea3b0afeeefb377
Author: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>
Date:   Thu Feb 15 15:35:20 2018 -0800

    ibmvscsis: remove deprecated ibmvscsis scripts and docs
    
    The original ibmvscsis module was removed from the kernel a long time
    ago, and has since been replaced with a new LIO implementation. The
    documentation and administration scripts supplied in this package as
    such have been deprecated. Lets go ahead and remove them.
    
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 9d86e33b7605e25473ea0a11d22a300274c8169b
Author: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>
Date:   Mon Jan 22 17:50:23 2018 -0600

    Test for librtas/librtasevent headers and libraries
    
    The current configure script only tests for the presence of librtas.h. Certain
    distros have chosen to split the librtas package into seperate librtas and
    librtasevent library/development packages. As a result compilation will fail
    for the rtas_event_decode utility if librtasevent.h is missing.
    
    Fix this by also checking for librtasevent.h, and for sanity purposes that
    the libraries themselves are actually present and linkable.
    
    Reported-by: Anton Blanchard <anton.blanchard@gmail.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 7790c5ae7ff50785c26e7d3942e0b86c9edb9df2
Author: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
Date:   Sun Jan 21 21:10:08 2018 +0530

    update_flash: Use device tree to get firmware version details
    
    On P9, OPAL exports firmware information via device tree
    (/ibm,firmware-versions node). Even recent hostboot firmware on P8 BMC system
    exports these information via mini device tree.
    
    Lets add support to parse device tree to get firmware information. If firmware
    information is not present in device tree then fall back to existing ipmi
    method.
    
    Signed-off-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 081e7ac9675b49346e937236f38822b33c8c751b
Author: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
Date:   Sun Jan 21 21:10:07 2018 +0530

    update_flash: Use inband ipmi path to get firmware version
    
    update_flash_nv uses 'ipmitool -I usb' interface to get firmware version
    details. This is AMI BMC OEM feature and not available on other BMC systems.
    Hence lets use inband interface to get firmware version details.
    
    Signed-off-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 73d847367d1a136d8e83d48e7ca4ff4602c0f5c7
Author: Michal Suchanek <msuchanek@suse.de>
Date:   Thu Jan 18 15:38:00 2018 -0800

    drmgr: load rpadlpar_io on -C as well
    
    Users do drmgr -C to verify their system.
    
    However, -C does not select any hotplug type, and the rpadlpar_io kernel
    module is loaded only when hotplug type pci, phb or slot is selected.
    
    Make display_capabilities global and check it in check_kmods()
    
    Signed-off-by: Michal Suchanek <msuchanek@suse.de>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 7fb22cb5b8a0c95821024aa84750945134303f20
Author: John Allen <jallen@linux.vnet.ibm.com>
Date:   Wed Dec 6 10:33:59 2017 -0600

    lparstat: Fix parsing of /proc/interrupts SPU line
    
    The current means of parsing the SPU line in /proc/interrupts is incorrect.
    Adding 11 to the current pointer is only correct if the number of SPU
    interrupts in each column is a single digit. Otherwise, for values with
    more than a single digit, we will only see the last digit of the value.
    This patch fixes the issue by using strstr to check for the SPU line and
    strtok to split the line into tokens in order to omit the arbitrary
    whitespace between values.
    
    Signed-off-by: John Allen <jallen@linux.vnet.ibm.com>
    Reported-by: Flos Lonicerae <lonicerae@gmail.com>
    Reviewed-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 3dcc222814ec1d661710eda320aced13566817f2
Author: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>
Date:   Fri Jan 5 13:00:31 2018 -0800

    lsdevinfo: fixup more null byte command substitution warnings
    
    As was pointed out in commit 4fcc611a09ca ("warning: command
    substitution: ignored null byte in input device") newer versions of Bash
    (bash 4.4) warn about null byte in command substitutions. While that
    commit fixed serveral instance by replacing the "cat" command with "tr"
    it missed two other instances in the lsdevinfo script where cat was
    being used to grab the "ibm,loc-code" property for a device.
    
    This patch fixes the other two instances for virtual fibre channel
    devices and pci ethernet devices.
    
    fixes: 4fcc611a09ca ("warning: command substitution: ignored null byte in input device")
    Cc: Seeteena Thoufeek <s1seetee@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 1f79078c979555a58a72326a318d956eb4efe4b5
Author: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>
Date:   Mon Dec 4 12:34:26 2017 -0800

    Add mailing list address to README
    
    Its been pointed out that the development mailing list address is not
    listed in the README file, and that a google search still points to our
    old sourceforge list.
    
    Update the README with our current development mailing list.
    
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 149c7022a56e0ffb5fe27681f574d46860323e3c
Author: Anton Blanchard <anton.blanchard@gmail.com>
Date:   Sun Oct 8 21:49:17 2017 -0700

    ppc64_cpu: Scale CPU cycles counter by amount of time it ran
    
    At the moment we start a CPU cycles counter, sleep one second and
    read the counter value, assuming we got one second of time on the
    PMU.
    
    There are two issues with this. If someone else is consuming all
    the available PMCs, we may end up context switching the PMC and
    count for half (or less) of the time. In this case we report a CPU
    frequency that is half (or less) of what it should be.
    
    On the other hand if the sleep goes for longer than one second which
    might happen on a busy box, then we count for too long and report a
    CPU frequency that is too high.
    
    Also check that we got a reasonable number of cycles and report
    an error if we did not.
    
    Signed-off-by: Anton Blanchard <anton@samba.org>

commit 8f9cd40fbcdda9d2447a1e51ed5dee2cb5c44542
Author: Harish <harish@linux.vnet.ibm.com>
Date:   Fri Sep 29 10:34:44 2017 +0530

    bootlist: Handle --help option
    
    This patch handles --help option for bootlist command and returns
    with 0
    
    Signed-off-by: Harish <harish@linux.vnet.ibm.com>
    [tyreld: reword patch subject line]
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

powerpc-utils-1.3.4
=====================================================================

commit c8083fbc1bfe1548057478ae46543bf58bffc7d4
Author: Michael Bringmann <mwb@linux.vnet.ibm.com>
Date:   Wed Aug 23 09:06:45 2017 -0500

    powerpc-utils.spec: Add "Vendor: IBM Corp."
    
    Ensure that "Vendor: IBM Corp." appears in archive for all checkouts
    and derived builds.
    
    Signed-off-by: Michael Bringmann <mwb@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 50f11c6c6618e7d59232d67e7446d07714af453b
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Thu Jul 6 12:31:36 2017 -0400

    lsslot: Validate DRC property groups
    
    Recently seen on a kvm guest running on a PowerNV system, the
    lsslot command segfaulted when trying to free the drc information.
    
    # gdb -q ./lsslot
    Reading symbols from ./lsslot...done.
    (gdb) run -c memory
    Starting program: ./lsslot -c memory
    
    Program received signal SIGSEGV, Segmentation fault.
    free_drc_info () at src/drmgr/common_ofdt.c:287
    287			all_drc_lists = list->all_next;
    
    The root cause of this is that the DRC properties in the guest were empty.
    This caused the lsslot (and likely possible in drmgr since this code
    is common to both commands) to improperly parse the device tree
    information.
    
    To fix this we need to add a check after gathering information for
    each of the DRC properties when reading DRC property group data. If
    there are no entries in any of the DRC properties we cannot continue.
    
    Reported-by: Seeteena Thoufeek <s1seetee@linux.vnet.ibm.com>
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit c25ae395db914f1137bb8a718277ea4b6f69136b
Author: Samuel Mendoza-Jonas <sam@mendozajonas.com>
Date:   Mon Jul 10 11:23:27 2017 +1000

    ppc64_cpu: Treat CPUs as online if cpu hotplug not enabled
    
    cpu_online() looks for the "online" attribute to decide if a cpu is
    online, however if the kernel does not have CONFIG_HOTPLUG_CPU enabled
    the attribute will not exist.
    get_attribute() calls access() first to check if the attribute exists,
    which will set errno with ENOENT if it is missing. If get_attribute()
    fails with this specific error, treat the cpu as online.
    
    Signed-off-by: Samuel Mendoza-Jonas <sam@mendozajonas.com>
    [tyreld: removed unnecessary braces from if block]
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 817900edd96c66d6f43f75aaefbe38bba6bab035
Author: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>
Date:   Fri Aug 4 16:24:01 2017 -0700

    Revert "ppc64_cpu: Treat CPUs as online if cpu hotplug not enabled"
    
    This reverts commit 5f70f6c1af2dd61122acfdbaa6e38be062bb220a.
    
    Reverting the commit as further inspection came to show it actually
    marked a cpu as offline when hotplug was not enabled.
    
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 136fab970076018bd56aa1aa0c09b8954b89b0b5
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue Jun 6 12:12:36 2017 -0400

    drmgr: Correct some bad formatting in drmig_chrp_pmig.c
    
    No functional changes, justy making the code more readable.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 1c5319c76ae8b378bfd59e8c0a08e89f83867dbf
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Wed Jun 7 16:35:33 2017 -0400

    drmgr: Correct errno usage in init_cpu_info()
    
    The error message reported if allocaing a dr node fails
    should not report the errno value. The call to allocate the
    dr node makes multiple syscalls and there is no way to
    determine which one last updated errno.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Reviewed-by: Paul Clarke <pc@us.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 998933a5185f9c56d1d6bce77301f3e7be6a54cf
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Wed Jun 7 16:35:28 2017 -0400

    drmgr: Correct errno usage use in validate_paltform()
    
    For validate_platform(), the call to get_property makes many
    system calls and there is no way to know what last updated the
    errno value. This patch drops the output of strerror() due to
    this reason.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Reviewed-by: Paul Clarke <pc@us.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit d1c6662d38adeb98a1fd8906cd54031c6fdd653d
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Wed Jun 7 16:35:22 2017 -0400

    drmgr: Stale errno usage corrections
    
    Several places in the drmgr code use a stale value of errno either
    as a return code or when printing an error message. A common example
    of this is calling the say() routine and then returning the value of
    errno. The say() routine makes several system calls and the value of
    errno after a call to say() no longer reflects the original errno
    value.
    
    Several places in the drmgr code were updated to properly handle
    the return codes from functions such as write() or open() where we
    should be checking for rc == -1 instead of rc <= 0. This does make
    a difference as errno won't be set for rc == 0.
    
    Note that partial write return codes are not really handled in the
    drmgr code. The drmgr command is writing to sysfs and /proc
    files where we know that they will either return success or
    failure and set errno, no partial writes.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Reviewed-by: Paul Clarke <pc@us.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 479f1a1122f7d9025d3a21e60a0431d2eba6ee2f
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue Jun 6 12:12:22 2017 -0400

    drmgr: Correct drc type checking in check_kmods()
    
    Fixes: f9986ac43011 ("drmgr: Move options.ctype to global usr_drc_type")
    
    When the conversion to using the global usr_drc_type was
    made the logic checking for whic drc types we need to check
    the rpadlpar_io kernbel module for was broken. This corrects
    the check.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 27e8d5b8218bc8c8c772080b0d99691bd31d4f0f
Author: Chandni Verma <chandni@linux.vnet.ibm.com>
Date:   Thu Jun 1 19:07:13 2017 +0530

    lsslot: Rectify usr_drc_name check
    
    This incorrect check refrains lsslot from displaying the slot information.
    
    Fixes: e82fb588f573 (lsslot: replace struct options member s_name with usr_drc_name)
    Signed-off-by: Chandni Verma <chandni@linux.vnet.ibm.com>
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    [tyreld: added fixes tag]
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 74715cc0e4db0e2738be7a19c852816c285d8284
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon May 22 16:40:58 2017 -0400

    lsdevinfo: Add support for vNIC devices
    
    Add support to dump information about vNIC devices so that device info
    requests from the HMC can retrieve data about vNIC devices.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    [tyreld: fixed up trailing whitespace]
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 25615a80f3fb5ebcc26d7b00316afce8c46ab2f9
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon May 22 16:40:50 2017 -0400

    ofpathname: Add support for vNIC devices
    
    Add 'vnic' to the list of device types for of2l_ethernet so vNIC
    devices are supported.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 6464f8e96228f7db355f08f270ada1104c3562c3
Author: Amartey Pearson <apearson@us.ibm.com>
Date:   Tue May 16 14:01:30 2017 -0500

    Improve perf of drmgr/lsslot with large num of virt. dev.
    
    The current algorithm for add_pci_vio_node walks the vdevice bus
    for every theoretical DRC (1000's of times).  The more vdevices
    you have populated, the worse this algorithm becomes.  On a system
    with 450 devices, this can take over 30 seconds for example.
    
    This modifies the algorithm to populate a node list of existing
    devices (so walks the tree just once), and then uses these nodes
    when populating the full list instead of walking the device tree
    for each one.
    
    NOTE:  This only is changed for virtual devices - a system with
    large numbers of PCI devices will not be optimized, but that is
    less of a concern.
    
    Signed-off-by: Amartey Pearson <apearson@us.ibm.com>
    Signed-off-by: Bryant G. Ly <bryantly@linux.vnet.ibm.com>
    [tyreld: changed my_drc_index type from u32 to uint32_t]
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 7539330a301ff9ac7d6fd5e1cf974bb9999100b2
Author: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>
Date:   Fri May 19 16:02:51 2017 -0400

    Test for zlib presence at configuration time
    
    The nvram utility links with zlib and compilation will fail if zlib.h or
    libz.so are not present. Check and warn at configuration time.
    
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 3a7b15104fb956aa2e5debababe8536dbd4e8cef
Author: Russell Currey <ruscur@russell.cc>
Date:   Fri May 19 17:36:45 2017 -0400

    errinjct: Remove platform check to enable KVM guests
    
    qemu/KVM guests can have RTAS as well.  There's already a check to see if
    RTAS is present, there's no need to hardcode the supported platform.
    Removing this check allows errinjct to work on KVM guests.
    
    Signed-off-by: Russell Currey <ruscur@russell.cc>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 5f70f6c1af2dd61122acfdbaa6e38be062bb220a
Author: Samuel Mendoza-Jonas <sam@mendozajonas.com>
Date:   Fri Apr 21 16:47:57 2017 +1000

    ppc64_cpu: Treat CPUs as online if cpu hotplug not enabled
    
    cpu_online() looks for the "online" attribute to decide if a cpu is
    online, however if the kernel does not have CONFIG_HOTPLUG_CPU enabled
    the attribute will not exist.
    If hotplug is not enabled then the cpu can be assumed to be online - in
    this case, update cpu_online() to treat the cpu as online.
    
    Signed-off-by: Samuel Mendoza-Jonas <sam@mendozajonas.com>
    Acked-by: Stewart Smith <stewart@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 4fcc611a09caea70e6bca6a1275211c72ac4bb45
Author: Seeteena Thoufeek <s1seetee@linux.vnet.ibm.com>
Date:   Wed Jan 11 15:36:33 2017 +0530

    warning: command substitution: ignored null byte in input device
    
    Ubuntu 17.04: "command substitution: ignored null byte in input" warning message is displayed while running few RAS commands.
    
    The command execution of ls-veth, ls-vscsi, lsdevinfo, and ofpathname returns following output.
    
    lsdevinfo
    /usr/sbin/lsdevinfo: line 233: warning: command substitution: ignored null byte in input
    device: name="ibmveth2"
    ls-vscsi
    /usr/sbin/ls-vscsi: line 72: warning: command substitution: ignored null byte in input
    host0 U8286.42A.1069B3T-V8-C17-T1
    ls-veth
    /usr/sbin/ls-veth: line 74: warning: command substitution: ignored null byte in input
    ibmveth2 U8286.42A.1069B3T-V8-C2-T1
    ofpathname sda
    /usr/sbin/ofpathname: line 812: warning: command substitution: ignored null byte in input
    /usr/sbin/ofpathname: line 865: cd: too many arguments
    /vdevice/v-scsi@30000011/disk@8100000000000000
    
    Newer versions of bash (Bash 4.4)  warn about null bytes in command substitutions. This is fixed.
    
    Also fixed /usr/sbin/ofpathname: line 865: cd: too many arguments.
    
    Signed-off-by: Seeteena Thoufeek <s1seetee@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 25b8f7d67fb3acee0970cd36f24dc17fac1f6dc3
Author: Pawan K Singh5 <pawan123@linux.vnet.ibm.com>
Date:   Mon Apr 10 15:00:28 2017 +0530

    ofpathname : avoid duplicate entries of vFC devices
    
    Adding support to avoid the duplicate entries of a Open Firmware device path to
    logical device path for vfc-client devices.
    
    The problem can be reproduced with the bootlist command
    
    # bootlist -m normal /dev/sdd /dev/sds /dev/sdf /dev/sdv
    # bootlist -m normal -r
    /vdevice/vfc-client@30000899/disk@500507680b2255fe
    /vdevice/vfc-client@30000899/disk@500507680b2255ff
    /vdevice/vfc-client@3000089a/disk@500507680b2255fe
    /vdevice/vfc-client@3000089a/disk@500507680b2255ff
    # bootlist -m normal -o
    sda---------------->expected "sdd"
    sdp---------------->expected "sds"
    sda---------------->expected "sdf"
    sdp---------------->expected "sdv"
    
    So, this patch check the duplicate entries of logical names of vFC devices at of2l_vfc()
    and display specified bootlist :
    
    # bootlist -m normal -r
    /vdevice/vfc-client@30000899/disk@500507680b2255fe
    /vdevice/vfc-client@30000899/disk@500507680b2255ff
    /vdevice/vfc-client@3000089a/disk@500507680b2255fe
    /vdevice/vfc-client@3000089a/disk@500507680b2255ff
    # bootlist -m normal -o
    sdd
    sds
    sdf
    sdv
    
    Signed-off-by: Pawan K Singh5 <pawan123@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

powerpc-utils-1.3.3
=====================================================================

commit d63e12aa7cd22d5e6c2baf595aacb644311e0217
Author: Mamatha Inamdar <mamatha4@linux.vnet.ibm.com>
Date:   Tue Dec 6 11:36:57 2016 -0500

    nvram:read list of partion names dynamically
    
    This patch is to read "list of partition dynamically and
    use it rather than having hardcoded partition table list.
    
    Test Results:
    
    without patch:
    nvram: ERROR: There is no Open Firmware "ibm,skiboot" partition!
    
    with patch:
    "ibm,skiboot" Partition
    --------------------------
    experimental-fast-reset=feeling-lucky
    
    Signed-off-by: Mamatha Inamdar <mamatha4@linux.vnet.ibm.com>
    Tested-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>

commit b54a095e820d0163e29b76b517b57227a358950d
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue Dec 6 11:29:17 2016 -0500

    lsslot: Correct formatting fopr printing cpus and caches
    
    Minor updates to the field sizes when printing cpus and caches
    so that the fields no longer run together.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 9d363cd79315f08d00e63674b3608dd3fdd72939
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue Dec 6 11:16:14 2016 -0500

    lsslot: Validate cpu->name when printing
    
    When printing the information for all possible CPUs we can possibly print
    a NULL string pointer. the libc printf code handles this gracefully by
    printing '(NULL)' but this is not what we should be relying on.
    
    This validates the cpu->name pointer before printing it and instead
    prints '--' if cpu->name is not valid.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit b3b35e9a84913f98ab1abf8ac019c8f3a94a5e1d
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue Dec 6 11:12:06 2016 -0500

    lsslot: Allow printing information of all possible cpus
    
    The lsslot command gathers information about all possible cpus on a
    system but only prints information about cpus that are present. This
    patch adds the ability to print information about all possible cpus
    when the '-d 4' option is used.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 8b229153221416bfdcd06ef67ad3a18fb5bea171
Author: Michel Normand <normand@linux.vnet.ibm.com>
Date:   Tue Dec 6 11:03:00 2016 -0500

    ofpathname: Avoid infinit loop in get_slave()
    
    This is a bypass for a problem raised on openSUSE with bug
    https://bugzilla.suse.com/show_bug.cgi?id=1011529
    
    Signed-off-by: Michel Normand <normand@linux.vnet.ibm.com>

commit 944cc93ae316edc99bbac1a83f5b0e1aa9401657
Author: Paul A. Clarke <pc@us.ibm.com>
Date:   Thu Dec 1 11:05:25 2016 -0500

    ppc64_cpu: emit error message for invalid core number to on- or offline
    
    An off-by-one test is done to detect invalid core numbers for explicit
    online/offline.  For example, on a 16 core system, valid cores are 0-15.
    However, specifying "16" has no effect, but does not produce an error:
    --
     # ./src/ppc64_cpu --cores-on
     Number of cores online = 15
     # ppc64_cpu --online-cores=16
     # ppc64_cpu --online-cores=17
     Invalid core to online: 17
    --
    
    This change will correctly report an error:
    --
     # ppc64_cpu --online-cores=16
     Invalid core to online: 16
    --
    
    Signed-off-by: Paul A. Clarke <pc@us.ibm.com>

commit be7583177b845b69b7c2e1f21f2652c0545c996d
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue Nov 29 11:42:37 2016 -0500

    lsprop: Update and honor recurse option
    
    The -R (recurse) option to lsprop is not honored when dumping the contents
    of a directory. Update the option to also include --recurse and honor this
    option when specified.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 69b62ea770c6f84f91706d8610a2815fbb19decc
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue Nov 29 11:41:27 2016 -0500

    lsprop: Add command version
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit ab587974c47f3c45929c748a16eee33e875c53f3
Author: Paul A. Clarke <pc@us.ibm.com>
Date:   Tue Nov 29 11:33:54 2016 -0500

    ppc64_cpu: tolerate non-uniform per-core SMT mode
    
    If not every core is in the same SMT state, the ppc64_cpu command will
    report such and no information specific to the command request:
    --
     # ppc64_cpu --cores-on
     Bad or inconsistent SMT state: use ppc64_cpu --smt=on|off to set all
     cores to have the same number of online threads to continue.
     Core   0:    0*    1*    2*    3*
     Core   1:    4*    5*    6*    7*
     Core   2:    8*    9*   10*   11*
     Core   3:   12*   13*   14*   15*
     Core   4:   16*   17*   18*   19*
     Core   5:   20*   21*   22*   23*
     Core   6:   24*   25*   26*   27*
     Core   7:   28*   29*   30*   31*
     Core   8:   32*   33    34    35
     Core   9:   36*   37    38    39
     Core  10:   40*   41*   42*   43*
     Core  11:   44*   45*   46    47
     Core  12:   48*   49*   50*   51*
     Core  13:   52    53    54*   55*
     Core  14:   56    57    58    59
     Core  15:   60*   61*   62*   63
     # ppc64_cpu --online-cores
     Bad or inconsistent SMT state: use ppc64_cpu --smt=on|off to set all
     cores to have the same number of online threads to continue.
     Core   0:    0*    1*    2*    3*
     Core   1:    4*    5*    6*    7*
     Core   2:    8*    9*   10*   11*
     Core   3:   12*   13*   14*   15*
     Core   4:   16*   17*   18*   19*
     Core   5:   20*   21*   22*   23*
     Core   6:   24*   25*   26*   27*
     Core   7:   28*   29*   30*   31*
     Core   8:   32*   33    34    35
     Core   9:   36*   37    38    39
     Core  10:   40*   41*   42*   43*
     Core  11:   44*   45*   46    47
     Core  12:   48*   49*   50*   51*
     Core  13:   52    53    54*   55*
     Core  14:   56    57    58    59
     Core  15:   60*   61*   62*   63
     # ppc64_cpu --offline-cores
     Bad or inconsistent SMT state: use ppc64_cpu --smt=on|off to set all
     cores to have the same number of online threads to continue.
     Core   0:    0*    1*    2*    3*
     Core   1:    4*    5*    6*    7*
     Core   2:    8*    9*   10*   11*
     Core   3:   12*   13*   14*   15*
     Core   4:   16*   17*   18*   19*
     Core   5:   20*   21*   22*   23*
     Core   6:   24*   25*   26*   27*
     Core   7:   28*   29*   30*   31*
     Core   8:   32*   33    34    35
     Core   9:   36*   37    38    39
     Core  10:   40*   41*   42*   43*
     Core  11:   44*   45*   46    47
     Core  12:   48*   49*   50*   51*
     Core  13:   52    53    54*   55*
     Core  14:   56    57    58    59
     Core  15:   60*   61*   62*   63
     # ppc64_cpu --smt
     Inconsistent state: mix of ST and SMT cores
    --
    
    This change allows the ppc64_cpu command to properly respond to the above
    requests:
    --
     # ppc64_cpu --cores-on
     Number of cores online = 15
     # ppc64_cpu --online-cores
     Cores online = 0,1,2,3,4,5,6,7,8,9,10,11,12,13,15
     # ppc64_cpu --offline-cores
     Cores offline = 14
     # ppc64_cpu --smt
     SMT=1: 8-9
     SMT=2: 11,13
     SMT=3: 15
     SMT=4: 0-7,10,12
    --
    
    Note that the output for "--smt" only changes if there is mixed modes.
    If the mode is uniform, the output will remain as before:
     # ppc64_cpu --smt=4
     # ppc64_cpu --smt
     SMT=4
    
    Signed-off-by: Paul A. Clarke <pc@us.ibm.com>

commit e227a80df7643a1f45e0d2b06e56ef430772c2dd
Author: Breno Leitao <breno.leitao@gmail.com>
Date:   Tue Nov 22 12:22:45 2016 -0500

    ppc64_cpu: add a numeric option when printing SMT
    
    Currently, there is not a numeric (non verbose) display of SMT modes,
    which means that three verbose output is usually generated, as:
    
      SMT=X
      SMT is off
      Machine is not SMT capable
    
    This patch implements a easily machine parsable output for SMT, helping
    a lot of scripts that needs to read SMT status on a machine.
    
    I am considering that if the SMT is off or impossible, then SMT=1 (1
    thread per core), thus, always returning SMT=X, where X means thread
    enabled per core, as 1, 2, 4, 8.
    
    Signed-off-by: Breno Leitao <breno.leitao@gmail.com>

commit 09b36b64ec51bd8ce6c0b2b345974cb228064b89
Author: Breno Leitao <breno.leitao@gmail.com>
Date:   Tue Nov 22 12:16:35 2016 -0500

    Fix man page for ppc64_cpu
    
    Currently there is a typo on ppc64_cpu manpage which causes the text
    to be corrupted, not printing anything after this typo, as showed:
    
           --smt  Display the current smt setting for  the  system.  The
                  .....
                  threads online varies per core, or
    
    As you can see, there is nothing else after the ", or" expression.
    
    This patch simply fixes this typo, which makes the manpage render
    correctly.
    
    Signed-off-by: Breno Leitao <breno.leitao@gmail.com>
    Reviewed-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>

commit 59a17aac4728a3c060f128b315df1324b8df39f5
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue Nov 22 11:43:20 2016 -0500

    lprstat: Add command version
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Reviewed-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>

commit 4519274c0bdbd781f660a1df8ca41cbe267229e4
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue Nov 22 11:42:15 2016 -0500

    activate_firmware: Remove extraneous comments
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 7e9a53937469c451de78d321abe64434ce3e0731
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue Nov 22 11:41:12 2016 -0500

    activate_firmware: Add verbose output option
    
    The activate_firmware currently has some debug statements that can only
    be activated by building the command with DEBUG defined. Instead, we should
    always have these statements active and control their output with the
    -v, --verbose option.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 2b0867d3327442fa8bcb42269db3436b5507ac2f
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue Nov 22 11:40:09 2016 -0500

    activate_firmware: Update the usage message and option parsing
    
    The usage message for activate_firmware should limit itself to 80
    characters per line. Additionally the formatting could use a little
    updating now that we have long options.
    
    The new help message appears as:
    
    Usage: src/activate_firmware [-e [keyfile]]
    Without any option, the activate_firmware utility will cause a firmware image
    that has already been flashed to be activated concurrently.
    
    Option summary:
      -e             prints the current Update Access Key expiry date
      -e <keyfile>   applies the provided Update Access key-file to extend
                     the service expiry date
      -h, --help     print this message.
      -v, --verbose  output extra debug information
      -V, --version  print version information.
    
    This patch also allows users to specify --help in addition -h for
    the help option.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Reviewed-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>

commit 1c4f7810323f3859f0359250eb3a6f4fab4ff036
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue Nov 22 11:38:42 2016 -0500

    activate_firmware: Add versioning
    
    Add versioning to the activate_firmware command.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Reviewed-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
    Reviewed-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>

commit 06f2033866b2a991def24354e8657c8146c43b95
Author: Breno Leitao <breno.leitao@gmail.com>
Date:   Wed Nov 9 16:24:22 2016 -0500

    Fix endian.h header on FreeBSD
    
    Unfortunately Linux default endian.h is locaed in sys/endian.h on
    FreeBSD. This patch simply detect what system you are running and
    use the proper location on the include.
    
    Signed-off-by: Breno Leitao <breno.leitao@gmail.com>

commit 28ec98068a3d06e77d8d3496c26e2f4ff8e61aeb
Author: Breno Leitao <breno.leitao@gmail.com>
Date:   Wed Nov 9 16:23:10 2016 -0500

    Avoid linking with libdl on BSD systems
    
    FreeBSD does not have libdl, so, when linking with -ldl fails.
    This patch simply check if you are running on BSD, and does not
    invoke -ldl during compilation.
    
    Signed-off-by: Breno Leitao <breno.leitao@gmail.com>

commit eca0c56ab6b041c1c90aa213492121d6f0d0c6af
Author: Breno Leitao <breno.leitao@gmail.com>
Date:   Wed Nov 9 16:20:20 2016 -0500

    ppc64_cpu: Fix function method signature
    
    If HAVE_LINUX_PERF_EVENT_H is not defined, the code fails to
    compile, because function do_cpu_frequency() does not have an
    Argument, as it has if HAVE_LINUX_PERF_EVENT_H is defined.
    This is the error message:
    
     error: too many arguments to function 'do_cpu_frequency'
    
    This patch simply adds an argument to the function.
    
    Signed-off-by: Breno Leitao <breno.leitao@gmail.com>

commit 741054926742785290ed1cfacac04d8e55409b4a
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Wed Oct 19 10:40:25 2016 -0400

    .gitignore: Add errinjct and rtas_dbg executables
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit d42164cd2dde616ba51b4143d9c17aa0b9c40b4a
Author: Hariharan T.S <hari@linux.vnet.ibm.com>
Date:   Wed Oct 19 10:37:51 2016 -0400

    hvcsadmin: findtools should be called before is_driver installed
    
    scripts/hvcsadmin: is_driver_installed is using systools, where as the
    same is checked for existence in findtools which is called later. It has
    to be called before to get the proper error message.
    
    The patch will first check for systools before checking for drivers.
    
    It will avoid the following situation.
    
    hvcsadmin -status
    Can't exec "systool": No such file or directory at /usr/sbin/hvcsadmin line 272.
    systool: No such file or directory at /usr/sbin/hvcsadmin line 272.
    
    Signed-off-by: Hariharan T.S. <hari@linux.vnet.ibm.com>

commit 0947a3dbaed4fc02e7d2d19cb0cdc6059fb86d5b
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Wed Oct 19 10:35:09 2016 -0400

    drmgr: Cleanup unused progress states in acquiring hotplug resources
    
    The progress state that is updated throughout the process of acquiring
    a hotplug resource is not used anywhere. This patch removes it.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit e116eb625c5cb194cb8bd59ddf1564e5268e6b31
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Wed Oct 19 10:33:26 2016 -0400

    drmgr: Add capability for PCI hotplug only operations
    
    We need to provide the capability to do a hotplug only style of operation
    for some adapters such as nvme adapters behind a bridge that can be owned
    by more than one partition. These scenarios are used for doing failovers
    and this update reduces the total drmgr time from 18 seconds per add or
    remove down to 2-3 seconds per action.
    
    Note that this is different from the PAPR notion of hotplug where the
    device is hotplug removed from the OS, then the slot is powered down,
    a new card inserted, the slot powered up, and the device hootplug added
    back into the system. This is the drmgr -R action. This new functionality
    just does the hotplug to/from the OS, nothing else.
    
    This update assumes that when doing an add, the DR indicator already has
    the proper isolation and allocation state, and the power to the slot is
    on. For remove operations the indicator and power for the slot is not
    modified.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 071949595434f68c7ed722b932173d9f69c20c84
Author: Stephen E. Royer <seroyer@us.ibm.com>
Date:   Thu Sep 1 10:12:10 2016 -0400

    nvsetenv: Fix unitialized variable in 'hvcsadmin'
    
    scripts/hvcsadmin: Fix display of distracting perl script warning
    notice about an unitialized variable during execution.  The message
    is an annoyance during operation.
    
    Signed-off-by: Stephen E. Royer <seroyer@us.ibm.com>
    Signed-off-by: Michael Bringmann <mwb@linux.vnet.ibm.com>

commit 16d7b3126e0c73a1eeb94742559934034667e4c7
Author: Michael Bringmann <mwb@linux.vnet.ibm.com>
Date:   Thu Sep 1 10:09:15 2016 -0400

    nvsetenv: Fix rpmbuild inclusion for nvsetenv
    
    Update Makefile.am to add the nvsetenv command to sbin_SCRIPTS so that is
    is included in generated tarballs from 'make dist'.
    
    Signed-off-by: Michael Bringmann <mwb@linux.vnet.ibm.com>

commit b071e81d8cd71af496d5c5b36371c30449051def
Author: John Allen <jallen@linux.vnet.ibm.com>
Date:   Fri Aug 26 15:29:58 2016 -0400

    lparstat: Ignore whitespace at beginning of /proc/interrupts SPU line
    
    In the case that any interrupt number in /proc/interrupts exceeds 3
    characters, whitespace will be placed at the beginning of the SPU line in
    order to keep the columns aligned. In that case, the current code will miss
    the SPU line. This patch skips any whitespace preceding the SPU line.
    
    Signed-off-by: John Allen <jallen@linux.vnet.ibm.com>

commit ce767e7a7254e5dd38655b67e31a7b337df5d68e
Author: John Allen <jallen@linux.vnet.ibm.com>
Date:   Fri Aug 26 15:26:12 2016 -0400

    drmgr: Include GPL header in prrn.c
    
    Add GPL boilerplate to prrn.c for consistency with other files in
    powerpc-utils.
    
    Signed-off-by: John Allen <jallen@linux.vnet.ibm.com>

commit 5814722814f876d584f59afdb38e7d3f23e6c7ad
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Fri Aug 26 15:21:06 2016 -0400

    drmgr: Add options.c to Makefile for creating tarballs
    
    Previous updates that ctreated the file options.c that is #included
    instead of built directly for drmgr and lsslot did not update the Makefile
    to ensure this file is included in tarballs when doing a 'make dist'.
    
    Add options.c to the list of NOINST_HEADERS for drmgr and lsslot.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 5799f6f26c34b6e7ac200e50666188279704937c
Author: Michael Bringmann <mwb@linux.vnet.ibm.com>
Date:   Fri Aug 26 15:17:25 2016 -0400

    nvsetenv: Add nvsetenv from SUSE distro
    
    nvsetenv: Add the nvsetenv script to the package which is normally
    only present in the SuSE variant of powerpc-utils.  The script is
    a wrapper for the nvram utility.
    
    Signed-off-by: Michael Bringmann <mwb@linux.vnet.ibm.com>

commit 3c3a53825248e1ef52ee203c968f643c26820cc5
Author: John Allen <jallen@linux.vnet.ibm.com>
Date:   Tue Aug 23 11:23:31 2016 -0400

    lparstat: Fix segfault when parsing /proc/interrupts
    
    Fix a bug where we hit a segfault running 'lparstat -i' on machines with a
    large number of cpus. The 'SPU' line in proc interrupts would exceed the
    512B allocated and we would subsequently walk off the end of the array
    when we attempt to parse the line. This solution uses getline instead of
    fgets in order to easily handle lines of arbitrary length.
    
    Signed-off-by: John Allen <jallen@linux.vnet.ibm.com>

commit 0a93eb52603fc8ea77f69ae628f7634054363ad3
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue Aug 23 10:41:39 2016 -0400

    drmgr: kill the options struct
    
    Remove the now empty struct options after making all of its members
    globals.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 64c57c69ed42c4a7af0e4d6b4657f0a52e608dfe
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Aug 22 16:20:23 2016 -0400

    lsslot: Make struct options member delimiter global
    
    Make the struct options member delimiter global and re-name it to
    usr_delimiter.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit e82fb588f5738e6d51e7530b894233c190c588b8
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Aug 22 16:19:04 2016 -0400

    lsslot: replace struct options member s_name with usr_drc_name
    
    With moving the option variables to globals we can replace the s_name
    lsslot variable with the existing usr_drc_name variable.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 4763b5452a120d6e7c98afcd24cc63e20e33f8de
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Aug 22 16:17:40 2016 -0400

    lsslot: make struct options member p_flag global
    
    Make the struct options member p_flag global and re-name it to show_caches
    to make it more descriptive.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 3dde5f36a9c87b9944ad4f46b983ebd2292455d2
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Aug 22 16:16:45 2016 -0400

    lsslot: make struct options member o_flag global
    
    Make the struct options member o_flag global and re-name it to
    show_occupied_slots to make it more descriptive.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 378acd01a6cc08e4afe27dd2aa102669cdf05f9b
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Aug 22 16:15:52 2016 -0400

    lsslot: make struct options member b_flag global
    
    Make the struct options member b_flag global and rename it to
    show_cpus_and_caches to make it more descriptive of what it represents.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 1d43df2b2c8090073aaafdfdc2d43ff5f2bac1e0
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Aug 22 16:14:54 2016 -0400

    lsslot: Make the struct options member a_flag global
    
    Make the struct options member a_flag a global variable and re-name it
    to show_available_slots to make it more descriptive of what it
    represents.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 67e7a1e02aa0b5223df32228311c8083e293ea8a
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Aug 22 16:13:29 2016 -0400

    lsslot: remove struct options slot_type member
    
    With the combined options struct and global variables we can re-use the
    drc_type to replace the lsslot variable slot_type.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 1de7ad4c2952392d151e02f9a67835dcc479ee7c
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Aug 22 16:10:34 2016 -0400

    drmgr: Make struct options member prrn_filename global
    
    Make the struct options member prrn_filename global.
    
    Signd-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 48b5de724e0baf7a74ec01cb983d2cd882510484
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Aug 22 16:09:09 2016 -0400

    drmgr: Make struct options member pci_virtio global
    
    Make the struct options member pci_virtio a global variable.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 213da0d8933835f1ec9466498d1ac800a8c83f0f
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Aug 22 16:07:25 2016 -0400

    drmgr: Make struct options member p_option global
    
    Make the struct options member p_option global as the variable
    usr_p_option.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit f9986ac430113c96d0398efb44159c22410bdf5f
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Aug 22 16:02:09 2016 -0400

    drmgr: Move options.ctype to global usr_drc_type
    
    Move the ctype member of struct options out to be the global usr_drc_type.
    This also makes the usr_drc_type an enum drc_type.
    
    The type change to the enum allows for checking the type directly
    instead of the numerous strcmp() operations that are done.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit f74a63f87acd08d9391134de50673f0cf22734a4
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Aug 22 15:52:56 2016 -0400

    drmgr: Make struct options member 'quantity' global
    
    Move the quantity member of struct options to be the global usr_drc_count.
    
    Signed-off-by: Nathan Fonteot <nfont@linux.vnet.ibm.com>

commit 0df871dd765933322ddbb63ff66e158ef81805dd
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Aug 22 15:49:27 2016 -0400

    drmgr: Make options struct no_ident member global
    
    Move the no_ident member of struct options to be the global usr_prompt
    variable. This change also moves the variable to a positive connotation
    which makes the code slightly easier to read.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 8192b8e6a79d784038ca5fdb1fc7959149e7105b
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Aug 22 15:45:58 2016 -0400

    drmgr: Make struct options member usr_drc_index global
    
    Move the usr_drc_index member of struct options to be global.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 669f581f4f65cb9046699ed7a375bc1693cdac92
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Aug 22 15:42:48 2016 -0400

    drmgr: Make struct options member usr_drc_name global
    
    Move the usr_drc_name out of struct options to be global.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit d1a1ed2f4349838fa162c1ef0a6b903ed1b2b42a
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Aug 22 15:37:55 2016 -0400

    drmgr: Make struct options member timeout global
    
    Move the timeout member of struct options out to be the global usr_timeout.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 552e42d863db093881d58038f27c5d2d72025491
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Aug 22 15:35:41 2016 -0400

    drmgr: Make struct options member no_ident global
    
    Move the no_ident member out of struct options to become the global
    usr_slot_identification. This change also gives the variable a
    positive connotation instead of the current negative so we are not
    checking for not no_ident, this should make the code more readable.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 6b9908f6c59dc2c24bf71f89f809f11b7cdb7fd3
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Aug 22 15:33:36 2016 -0400

    drmgr: Update various uses of local 'action' variable
    
    Update the various locations that use a local action variable and just
    use the global usr_action variable directly.
    
    Signed-off-by: Nathan Fonteot <nfont@linux.vnet.ibm.com>

commit 9606e3012efd2eb0c3c7be95ea43f66c517ef3bc
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Aug 22 15:29:00 2016 -0400

    drmgr: Make option struct member 'action' global
    
    Move the action member out of struct options to become the global
    usr_action. Also introduce the enum drmgr_action as the type for
    usr_action.
    
    This patch also introduces the file options.c which will hold the
    definitions of all of the global variables common to the drmgr and
    lsslot commands. This file is included in drmgr.c and lsslot.c instead
    of being built directly.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit f3379e4bd9525a914f3e5478858de7425689a778
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Aug 22 15:22:42 2016 -0400

    drmgr: Merge drmgr and lsslot options structs
    
    Merge the lsslot cmd_opts struct in to the drmgr options struct to make
    a unified options structure for both commands.
    
    By also moving the MAX #define to dr.h we can get rid of the lsslot.h
    header.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit c61535c62111d04a886a2b4d7613b7006d5fe209
Author: John Allen <jallen@linux.vnet.ibm.com>
Date:   Thu Aug 11 16:30:12 2016 -0400

    lparstat: Fix bad cast from integer to float
    
    Fix a bug where the cpu stats (%user, %sys, %wait, and %idle) do not add
    up to 100%. The problem was that we were casting the cpu stats and the
    total cpu time to floats from ints. For large integer values, this would
    cause the floating point representation to be truncated. This solution
    avoids the casts and stores the cpu stats as long longs and only casts
    'total' to a long double in order to perform floating point division.
    
    Additionally, this patch parses the proc stat values as long longs as
    on systems that have been running for a long time, these values can exceed
    the maximum 32 bit integer limit.
    
    Signed-off-by: John Allen <jallen@linux.vnet.ibm.com>

powerpc-utils-1.3.2
=====================================================================
commit 4e5b9dacf7bbddfb58269fc50de6586a9ac6fdfd
Author: Ulrich Weigand <ulrich.weigand@de.ibm.com>
Date:   Mon Jul 11 17:13:17 2016 -0400

    lparstat: Fix computation of time used in statistics
    
    The routine get_time computes bogus timestap values due to confusing
    seconds and microseconds.  This leads to incorrect return values from
    elapsed_time and therefore incorrect values for the physc field.
    
    Fixed by converting the "time" sysentry field to microseconds (and
    computing it correctly), and updating the user of elapsed_time.
    
    In addition, %entc is supposed to show the ratio of physc to the
    number of entitled CPUs as *percentage*, so the ratio needs to be
    multiplied by 100.
    
    Signed-off-by: Ulrich Weigand <ulrich.weigand@de.ibm.com>
    Signed-off-by: Michael Bringmann <mbringm@us.ibm.com>

commit a97c5664f53f9a18dd0b941a842d7884253cf8ed
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Jul 11 17:06:26 2016 -0400

    drmgr: Disable use of in-kernel cpu hotplug
    
    After submitting the patch to update drmgr to use the in-kernel hotplug
    capabilities for memory and cpu, commit <bbc5fc07c54d> (drmgr: Start using
    in-kernel DLPAR functionality for cpu/memory), I realized there
    are still distro kernels that do not have the in-kernel cpu hotplug
    capabilities. Using the latest drmgr with this update breaks cpu dlpar
    because the cpu dlpar code assumes that if the dlpar sysfs file exists
    then in-kernel cpu dlpar is possible. this is wrong, the sysfs dlpar file
    was added with in-kernel memory hotplug, its existence can only guarantee
    memory hotplug capability.
    
    For now, disable using the in-kernel cpu capabilities by drmgr until
    this can be resolved.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 2bb7599d702d4e1de1ff0f9cbe53329e59c4e120
Author: Ian Neal <ian.neal@gmail.com>
Date:   Mon Jul 11 10:02:45 2016 -0400

    lparstat: flush data to stdout
    
    The stdout stream is not being flushed after being written to.  This
    means that it doesn't behave properly in shell pipelines as the data
    isn't visible until the program exits.  The fix is to simply flush
    after writes so the data is immediately available to other processes
    in the pipeline.
    
    Signed-off-by: Ian Neal <ian.neal@gmail.com>

commit c3269d4e3d4882fd931d1df6aece0bec86fb6734
Author: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
Date:   Thu Jun 30 10:26:58 2016 -0400

    update_flash: Fix bashism issue in opp_display_current_fw_version()
    
    Ubuntu uses dash, not bash. We hit below warning on Ubuntu system.
    
    root@abc:/sys/firmware/devicetree/base/ibm,opal/sensors# update_flash -d
    /usr/sbin/update_flash_nv: 595: [: x43: unexpected operator
    Firmware version:
    ....
    ....
    
    == is a bashism. Replace it with =.
    
    Fixes: 767e3dd7 (update_flash: Add support for OpenPower system)
    Signed-off-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>

commit 386a07c4dc6c09d35116dc6064f7a83d76f4415b
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue May 24 16:32:39 2016 -0400

    errinjct: Correct read_file() error checking
    
    When reading files from syfs the file length returned from a stat()
    call does not always match the actual length of the file. The read_file()
    routine should be checking for an error return from the read() call
    instead of checking that the amount read matches the file length returned
    from a stat() call.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 42b83884bfb51c0c8b23bf2949157430f8468caa
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue May 24 16:31:37 2016 -0400

    errinjct: Recognize -5 return from rtas
    
    Update the errinjct command to recognize the rturn code of -5 from
    rtas indicating that PCI error injection is not enabled.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit ab848a8d5cc4c4b9f5faef1b31be3982fb7d4bf2
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue May 24 16:30:33 2016 -0400

    errinjct: Correct config_addr parsing
    
    A recent patch (commit id: ccc9c72cec2a4) to move the errinjct function to
    using a common read_file() routine did not correctly update the
    get_config_addr_from_reg() function. This patch corrects this to return the
    proper config address.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 9fc079cf39d999040483a00d3b41000ca3e43013
Author: John Allen <jallen@linux.vnet.ibm.com>
Date:   Tue May 24 16:28:27 2016 -0400

    drmgr: Workaround for concurrent PRRN collisions
    
    Proposed workaround for issues with current PRRN event handling mechanism.
    
    Currently, the mechanism works by kicking off a script that calls a drmgr
    remove followed by a drmgr add for each effected device. With this method,
    problems can occur when multiple prrn events arrive in a short time span or
    when other dlpar operations are happening while the script is running. What
    can happen is that these other dlpar operations can jump in inbetween when
    the script calls the remove and the add and take the drmgr lock. Then when
    we try to add the memory back from the script, we are unable to take the
    drmgr lock and the add fails.
    
    This patch fixes this issue by creating a new -P flag for drmgr which will
    perform the necessary removes/adds from within the drmgr lock. The new
    option will be invoked as follows:
    
    drmgr -P <path to prrn log file>
    
    On the rtas_errd side, we will begin by creating a log file for the
    PRRN event which will contain a list of the type and the drc index for
    each effected device. Then instead of invoking the script, we will call
    the above drmgr command with the path to the prrn log file. Then, on the
    drmgr side, we parse the list and perform the necessary removes/adds and
    then delete the prrn log file.
    
    Signed-off-by: John Allen <jallen@linux.vnet.ibm.com>

commit bbc5fc07c54dd53f4ceac3552ea12717cc86cba2
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Wed May 11 13:16:19 2016 -0400

    drmgr: Start using in-kernel DLPAR functionality for cpu/memory
    
    Now that the capability to do DLPAR of cpus and memory can be
    done completely in the kernel, update the drmgr command to use
    this functionality.
    
    The kernel updates provided a sysfs file (/sys/kernel/dlpar)
    that will allow the drmgr command invoke DLPAR of cpus and memory
    by writing to this file.
    
    There are some exisitng behaviors of drmgr on the PowerVM platforms
    that require cpu and memory to be done slightly differently. For
    memory drmgr only needs to report the number of LMBs that were
    added or removed so drmgr can just pass all requests straight to
    the kernel. This patch also makes a common routine for reporting
    memory resources to ensure the format is kept constant.
    
    For cpu DLPAR the drmgr command has to report the drc name of each
    cpu that is added/removed. To do this the command uses much of the
    same device tree parsing that is currently used and make a request
    to the kernel to remove a specific cpu (by drc index) where a
    write to the sysfs probe file was previously done.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 4dafa57ec7c1498f94b324e671625b0794b92f2f
Author: Thomas Falcon <tlfalcon@linux.vnet.ibm.com>
Date:   Tue Apr 19 15:01:13 2016 -0400

    ppc64_cpu: display error message after set_smt_state_one failure
    
    This avoids a silent error if threads are unable to be onlined or offlined.
    
    Signed-off-by: Thomas Falcon <tlfalcon@linux.vnet.ibm.com>

commit 96745e9e1cb560af6f900b1dac920e36db750ee5
Author: John Allen <jallen@linux.vnet.ibm.com>
Date:   Tue Apr 19 14:52:35 2016 -0400

    lparstat: Check return value of fopen/popen before dereferencing
    
    Checks the return value of fopen and popen in several locations to make sure
    it's not null. If we pass a null file descriptor to fgets, we will hit a
    segfault.
    
    Signed-off-by: John Allen <jallen@linux.vnet.ibm.com>
    Reviewed-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>

commit 6855b92b3f9f3ed9c02065344cc98b965c3f03ef
Author: Michael Roth <mdroth@linux.vnet.ibm.com>
Date:   Tue Apr 19 14:49:43 2016 -0400

    drmgr: avoid loading rpadlpar_io/rpaphp when -v flags is used
    
    The -v / opts->pci_virtio flag was added to provide an alternative way
    to scan/remove PCI devices which doesn't rely on rpaphp. That was a
    workaround for a bug induced by QEMU emulating PHBs with multiple
    hotpluggable slots, which fails to register slots beyond the first due
    to rpaphp no longer accounting for the possibility of there being more
    than 1 slot per PHB. This leads to warnings of the form:
    
      kernel: rpaphp: pci_hp_register failed with error -16
      kernel: rpaphp: pci_hp_register failed with error -16
      ...
    
    For most guest distros this has resulted in the module not being
    loaded by default to avoid the errors showing up.
    
    However, as of a9b4e4e, we now load automatically load the module as
    needed, but we don't take opts->pci_virtio into account when
    determining if it's needed, leading to PCI hotplug operations to
    KVM guests now resulting into rpaphp being loaded and
    generating the errors above when drmgr is invoked.
    
    Fix this by avoiding modprobe of rpadlpar_io/rpaphp when
    opts->pci_virtio is set.
    
    Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>

commit efa87d93231eb0fe4f406bf58e7d5aa783ee4f13
Author: Michael Bringmann <mwb@linux.vnet.ibm.com>
Date:   Tue Apr 19 14:47:32 2016 -0400

    lparstat: Correct presentation of some stats
    
    lparstat.c: Currently there are several problems with the presentation
    of statistics by lparstat's default output mode.  These issues include:
     * Showing negative values for certain fields e.g. %user, %sys, %wait,
       %lbusy.
     * Showing zero values for certain fields e.g. physc, %entc
     * Identifying systems with 'Shared' or 'Dedicated' Memory Mode
     * Calculating the number if logical CPUs used by a system
    This patch looks to correct these issues.  It also changes the widths
    of the physc, %entc fields which had too little precision available
    to show the value change on some systems.
    
    Signed-off-by: Michael Bringmann <mwb@linux.vnet.ibm.com>

commit a27c639aca69271aabe7cac287f998b29b82f333
Author: Michael Roth <mdroth@linux.vnet.ibm.com>
Date:   Tue Apr 19 14:37:36 2016 -0400

    drmgr: ensure PCI cleanup is done before offlining dev
    
    As part of 4f542616, functionality was added to support add/remove
    PCI devices without relying on rpaphp hotplug module. The sysfs
    write used in the remove path initiates an asynchronous removal of
    PCI device from kernel PCI subsystem, and eventually from the sysfs
    tree. Afterward, we set the corresponding DRC for the device to
    ISOLATED state so host can complete device removal.
    
    To avoid the situation where the asychronous removal has not yet
    completed by the time drmgr sets the state to ISOLATED, and simple
    sleep of 3 seconds was added. This seems to have worked out okay
    for virtio devices, but in the case of other devices, like PCI
    passthrough of a Mellanox CX4 virtual function, the removal can take
    up to 20 seconds.
    
    When this happens, we hit a situation where the host reclaims the
    devices while the guest is still attempting to access it in it's
    cleanup path, which leads to guest crashes.
    
    Fix this by polling the PCI devices sysfs path and not completing
    the removal until the sysfs path is removed as part of device cleanup.
    
    Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>


powerpc-utils-1.3.1
=====================================================================
commit dccad2d1dc5c84571f31af3117095bd9ec6e34c4
Author: Brahadambal Srinivasan <latha@linux.vnet.ibm.com>
Date:   Fri Mar 25 07:46:56 2016 -0400

    snap: PowerNV platform is not correctly checked
    
    Recent patches to change from PowerKVM to PowerNV missed a
    simple change to the /usr/sbin/snap script. This patch is to
    fix that.
    
    Signed-off-by: Brahadambal Srinivasan <latha@linux.vnet.ibm.com>

commit a9b4e4ed7c6a908feb04f5b066f214ad14c76745
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Fri Mar 25 07:45:20 2016 -0400

    drmgr: Load kernel modules for pci hotplug
    
    For PHB DLPAR, slot DLPAR, and PCI hotplug operations we need to ensure
    that the rpadlpar_io and rpaphp kernel modules are loaded or have been
    built into the kernel. A check for this is currently done for PHB and
    slot DLPAR when determining if the system is capable of these operations.
    
    This patch moves the code to validate the presence of these modules
    to be called from dr_init() for PHB/SLOT/PCI operations. In order
    to do this the parsing of args has to be done prior to calling dr_init.
    This should not cause an issue since we can parse args without holding
    the dr_lock and any errors are written to stderr.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit c66dfa6338e6bb889f4806df1518642a800992ea
Author: John Allen <jallen@linux.vnet.ibm.com>
Date:   Fri Mar 25 07:43:39 2016 -0400

    lsslot: Update man page/usage statement to document required argument
    
    Update man page and usage statement for lsslot to reflect the fact that
    the -d flag requires an argument.
    
    Signed-off-by: John Allen <jallen@linux.vnet.ibm.com>

commit bd7e19a9ff5aebe741b0520906660dac1ecf4a2a
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Fri Mar 25 07:27:58 2016 -0400

    nvram: Correct valid partition name checking
    
    A recent update to not allow long names had a bug in that it did
    not correctly check the return value when verifying a partition name.
    
    Fixes: b15b0a7f9ffc (nvram: don't allow long names)
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    CC: Joel Stanley <joel@jms.id.au>

commit 63a362d28253e32552ff3e1e4358bfb47d69c78b
Author: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
Date:   Thu Mar 17 20:01:06 2016 -0400

    ofpathname: Convert OF device path to logical device path for NVMe devices
    
    Add support to convert a Open Firmware device path to logical device path
    for NVMe devices (with namespace id).
    
    Signed-off-by: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>

commit bd0a574f70f2b2af39020440e6e3ed61ab5afe35
Author: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
Date:   Thu Mar 17 19:59:51 2016 -0400

    ofpathanme: Convert logical device path to OF device path for NVMe devices
    
    Add support to convert logical device path to Open firmware device path
    for NVMe devices.
    
    Signed-off-by: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>

commit e4af95a7da425d37a6762b81d1614e648129b36a
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue Feb 23 14:43:35 2016 -0500

    drmgr: free allocated hpdev in error path
    
    In error paths while allocating hpdevs in get_os_hp_devices() we
    can exit without free'ing an allocated hpdev. Move up the addition
    of the hpdev to the hpdev_list to ensure it is free'ed if an error
    occurs.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 6fcff4b41726784d9f13bdc905d7eb85f84a3248
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue Feb 23 12:18:12 2016 -0500

    drmgr: close opened dir
    
    Close the directory we are traversing before returning.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit faa441c184dfa28bd5793adbd17faa7f696fc49d
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue Feb 23 12:17:03 2016 -0500

    rtas_dbg: Do not exit on failure to read rtas token
    
    When gathering a list of the available rtas tokens if we are not able
    to determine the rtas token value for a token in the device tree we
    should print an error message and continue instead of exiting.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 64dd69fdc6242ec22519f1d2a18f1328825add3e
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue Feb 23 12:15:53 2016 -0500

    rtas_dbg: Ensure we NULL terminate token names
    
    The current code to look up rtas tokens writes the token name
    to a static buffer size, this runs the risk of not having the
    string null terminated if the string length matches the buffer
    length.
    
    Update the code to use strdup so we can ensure the strings are
    null terminated. This also updates the free_rtas_tokens()
    routine to free the token name.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit ccc9c72cec2a4885a219958c69c35abae6cef9c4
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue Feb 23 12:14:16 2016 -0500

    errinjct: Correct possible buffer overflow
    
    In multiple places in the errinjct command we read the contents of
    a file into a local buffer. This presents a possible issue if the
    file we are reading ever exceeds the size of the buffer. To prevent
    this issue a new read_file() routine is introduced that will
    allocate a buffer large enough to hold the contents of the file and
    read the file into the buffer.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit fa50467bbf0f83207055124e7bee866cbc1b612c
Merge: 39dbb91 61558c9
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Feb 15 09:03:26 2016 -0500

    Merge branch 'cyphermox-mpath' into next

commit 61558c9df4571b79c435e2d7b1157f40ae7565a3
Merge: 39dbb91 2d27304
Author: Mathieu Trudel-Lapierre <mathieu.trudel-lapierre@canonical.com>
Date:   Mon Feb 15 08:51:37 2016 -0500

    ofpathanme: map mpath* devices to the appropriate dm-* generic dm device
    
    Signed-off-by: Mathieu Trudel-Lapierre <mathieu.trudel-lapierre@canonical.co

commit 39dbb91904e0b94aa5a665d5f84dec736fdbbb07
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Feb 1 11:59:27 2016 -0500

    errinjct: Close file descriptors
    
    Properly handle file descriptors opened by ensuring
    they are closed prior to returning. Reported as a
    leaked resource by Coverity scans.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Reviewed-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>

commit 07c190715a730dc98823691f18aa3b262a2bf432
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Feb 1 11:57:49 2016 -0500

    errinjct: Null terminate buffer from read()
    
    Null terminate buffers filled when calling read(). Issue uncovered
    with Coverity Scans.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 3153111b0ab6e6ae2b83c448443a3b6e3e8fe6e5
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Feb 1 11:56:02 2016 -0500

    activate_firmware: Remove use of strcat
    
    Resolve uninitialized scalar variable reported by Coverity scan.
    The 'msg' buffer was being used uninitialized in calls to strcat,
    this patch removes the use of the local 'msg' variable and puts
    the message string directly in the warnx() call.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Reviewed-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>

commit f3f25d4aee3f12f0dfc6611aaab6f0819d58fe33
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Feb 1 11:53:13 2016 -0500

    ppc64_cpu: free core_state on error
    
    Make sure we free the allocated 'core_state', issue found with Coverity.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit e6f476d32c33f5b8e364f930c467785495eeb0ce
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Feb 1 11:51:55 2016 -0500

    lsslot: free lmb_list on error
    
    Free the lmb resources allocated by lsslot, Issue discovered with
    Coverity scan.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 2d27304b9e8f69619927cd2f55fb1c11c3dc5f09
Author: Mathieu Trudel-Lapierre <mathieu.trudel-lapierre@canonical.com>
Date:   Tue Jan 12 16:46:12 2016 -0500

    ofpathname: map mpath* devices to the appropriate dm-* generic dm device.
    
    Signed-off-by: Mathieu Trudel-Lapierre <mathieu.trudel-lapierre@canonical.com>

powerpc-utils-1.3.0
=====================================================================
commit ad4cf85f4bc80f6f5cbf4ce0b71eada696848081
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Thu Jan 7 15:17:41 2016 -0500

    Move the powerpc-utils package from the IBM license to the GNU GPL license.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit f037afe3bcece02ca3a3b1711a57c66db088cfa1
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue Dec 1 16:36:11 2015 -0500

    drmgr: Correct checking for display adapters when adding PHB
    
    A previous commit (c2091227) added formalization for checking for display
    adapters. Unfortunately the update tries to verify if there is a display
    adapter for a NULL phb pointer when trying to add a PHB resulting in a
    segfault on phb add requests.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 85a5037cb01c1aaa5ad3dbd91f74dbcdd823dbb1
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue Dec 1 16:35:04 2015 -0500

    drmgr: Remove extraneous debug output
    
    Remove extra debug statements for allocating and free'ing drc information.
    These were mistakenly left in during debug of a previous patch.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 33aa48a0c4ebc4e660080514939232ad2912cb6d
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Tue Dec 1 16:33:45 2015 -0500

    drmgr: Fix node add buffer overflow
    
    When adding a node to the device tree, the drmgr command writes a terminatin
    null in the first character past the end of the allocated buffer. This
    results in a SIGABRT being generated by libc when the buffer is free'ed.
    The fix is to move the writing of the space between properties to the
    beginning of the loop instead of at the end of the loop.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 55544a975f87e9d76366e6fefcf571ae01f3e7eb
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Nov 23 21:10:27 2015 -0500

    drmgr: Remove extraneous "d" in buffer
    
    Remove an erroneous character left in a print statement used
    to update the drconf property.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit f4006893d84c85bbf5b86919c28ba56047001204
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Nov 23 21:09:47 2015 -0500

    drmgr: Correct return code from set_mem_scn_state()
    
    The set_mem_scn_state() routine incorrectly returns the number of chars
    written in the case of success instead of returning 0. This results in the
    caller assuming a failure occurred when setting the memroy section state
    and fails the memory online/offline operation.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 4f515ea179cb36f26adb53c93b79f834e32c2abe
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Nov 23 21:08:54 2015 -0500

    drmgr: Correct LMB counting when discovering LMBs
    
    Recent updates to how drmgr counted the number of LMBs found did
    not save the count value correctly and in the case of LMBs found
    in the ibm,dynamic-reconfiguration-memory property only counted
    LMBs that were present. This caused havoc when trying to shuffle
    the LMBs.
    
    Save the LMB count in the lmb_list_head struct so we have it across
    function calls. Also update the shuffle_lmbs to just take a pointer to
    the lmb_list_head and make changes locally in the routine.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 9a1957588b040db0dddfa284dbb96a817e699792
Author: Cédric Le Goater <clg@fr.ibm.com>
Date:   Mon Nov 23 21:07:17 2015 -0500

    update_flash_nv: improve check_ipmitool
    
    This patch adds a quick test in check_ipmitool to make sure the
    BMC is alive
    
    Signed-off-by: Cédric Le Goater <clg@fr.ibm.com>

commit 4e4e5f9f8d16a2ad196d1fd5388de23aa2e1fdbc
Author: Cédric Le Goater <clg@fr.ibm.com>
Date:   Mon Nov 23 21:06:52 2015 -0500

    update_flash_nv: fix firmware update sequence for powernv
    
    This patch modifies the way the firmware update is performed from
    the host. It adds a cold reset of the BMC before and after the
    update.
    
    Signed-off-by: Cédric Le Goater <clg@fr.ibm.com>

commit 1f25105c1c7f1384be4aef03f2aa6d5bd065eb11
Author: Cédric Le Goater <clg@fr.ibm.com>
Date:   Mon Nov 23 21:06:22 2015 -0500

    update_flash_nv: force the use of the ipmitool usb backend
    
    Signed-off-by: Cédric Le Goater <clg@fr.ibm.com>

commit b0e5ba4f55dcf1a5d013eddbb95b660c65504b3c
Author: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>
Date:   Mon Nov 23 21:04:45 2015 -0500

    ppc64_cpu: output to user if the requested number of cores are not brought o
    
    Now that we check the return code from set_one_core, we should ensure
    that the requested number of cores in --cores-on is achieved, or return
    -1 intead. Also add a slightly verbose message in that case.
    
    Signed-off-by: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>

commit 1a1bb7167a3946712a5b59b5566bac6ced46cdc9
Author: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>
Date:   Mon Nov 23 21:03:37 2015 -0500

    ppc64_cpu: use rc instead of boolean flag
    
    We can overload the rc variable, reducing the number of local variables
    in do_online_cores.
    
    Signed-off-by: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>

commit 37eeba5583d48558f2ca1de6096df83494005e6f
Author: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>
Date:   Mon Nov 23 21:00:14 2015 -0500

    ppc64_cpu: check return code from set_one_core
    
    In both --cores-on and --online-cores, the return code from the helper
    function set_one_core is not checked. This can lead to ppc64_cpu
    returning 0 even though the command technically failed to do what was
    requested. After this patch, --cores-on still doesn't return a proper
    error code (fixing in a follow-on).
    
    Signed-off-by: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>

commit 9711ee00b604a39d47dfced7f0c49cf40600131f
Author: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>
Date:   Tue Nov 17 16:24:37 2015 -0500

    ppc64_cpu: add --{on,off}line-cores to {on,off}line specific cores
    
    We currently have support for a mechanism to ensure an exact number of
    cores (or all cores after a recent patch submission) are online.
    However, there is no control over which cores are selected. Add two new
    options to ppc64_cpu, --online-cores and --offline-cores to support
    specifying which cores to bring online or offline, respectively. Both
    options take either no parameters, in which case they output a
    comma-separated list of cores that are online/offline, or a
    comma-separated list of cores, in which case the command sets those
    cores' states to online/offline.
    
    Signed-off-by: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>

commit 2239dd005e00d63c6e68fe962928b5f0b08ef6cb
Author: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>
Date:   Tue Nov 17 09:33:55 2015 -0500

    ppc64_cpu: rename do_cores_online to do_cores_on
    
    This matches the other function names more closely.
    
    Signed-off-by: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>

commit bb8472f0658565e5188150a141fa8856b55000ca
Author: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>
Date:   Tue Nov 17 09:31:57 2015 -0500

    ppc64_cpu: add all parameter to --cores-on to online all cores
    
    Rather than finding out how many cores are in a system, and then passing
    that value to --cores-on, it can be handy to have a shortcut to just
    online all cores.
    
    Signed-off-by: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>

commit 17cd4bbf7c20d8096523c765c1157e4a58d31363
Author: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>
Date:   Tue Nov 17 09:29:06 2015 -0500

    ppc64_cpu: handle errors from strtol in --cores-on parsing
    
    Currently, on a 24-core system, passing certain values to `ppc64_cpu
    --cores-on` leads to some surprising results:
    
    ppc64_cpu --cores-on=all
    ppc64_cpu --cores-on=adfd
        offlines all but one core
    
    This is because we are not using the endptr parameter of strtol to
    determine if any of the string is consumed (and if none of the string is
    consumed, strtol still returns a valid long value, namely 0).
    
    ppc64_cpu --cores-on=12df
        onlines 12 cores
    
    This is because we are not using the endptr parameter to strtol to
    determine if the entire string is consumed (checking for trailing
    characters).
    
    Add both these checks.
    
    After this patch:
    
    ppc64_cpu --cores-on=all
    Invalid number of cores to online: all
    ppc64_cpu --cores-on=adfd
    Invalid number of cores to online: adfd
    ppc64_cpu --cores-on=12fd
    Invalid number of cores to online: 12fd
    
    Signed-off-by: Nishanth Aravamudan <nacc@linux.vnet.ibm.com>

commit 475919d4294819e5f890f000ccadf5b13280a0a9
Author: Chandni Verma <chandni@linux.vnet.ibm.com>
Date:   Mon Nov 16 16:50:11 2015 -0500

    powerpc-utils.spec: Fix typo in spec-file
    
    In line:
    %{__rm} -rf $RPM_BULD_ROOT
    The directory should be RPM_BUILD_ROOT not RPM_BULD_ROOT
    
    Signed-off-by: Chandni Verma <chandni@linux.vnet.ibm.com>

commit b1d909378cf8a9502c7207f4f51a2cf3931d5263
Author: Michael Bringmann <mwb@linux.vnet.ibm.com>
Date:   Mon Nov 16 16:48:30 2015 -0500

    errinjct/rtas_debug: Update RPM packaging specs
    
    This patch updates the powerpc-utils.spec.in file to install the binaries
    associated with errinjct and rtas_dbg.
    
    Signed-off-by: Michael Bringmann <mwb@linux.vnet.ibm.com>

commit 03704771a36c025eb8636a90f67eaa77acd5880d
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Nov 16 16:40:47 2015 -0500

    lsslot/drmgr: Performance enhancement for parsing LMBs

    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 268116acde0d5f98efa150044b68d977d578ccb4
Author: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
Date:   Mon Nov 16 16:39:15 2015 -0500

    errinjct: Add format specificer
    
    We hit below build warning with "-Werror=format-security" compilation option
    
     CC       src/errinjct/icache.o
     src/errinjct/errinjct.c: In function 'perr':
     src/errinjct/errinjct.c:240:18: error: format not a string literal and no f
       fprintf(stderr, buf);
                         ^
    
    Signed-off-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>

commit c2091227bdf40192a37456445a6dedf3f3da8cda
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Nov 16 16:27:08 2015 -0500

    drmgr: Do not allow DLPAR of display adapters
    
    The DLPAR of display adapters has never been supported but that support
    has not ever been enforced in drmgr. Recent tests show that trying to DLPAR
    remove a display adapter causes the drmngr command to appear hung as it
    waits for display adapters to power down.
    
    Add the ability to check for a drc-type of 'display' when trying to add
    or remove a pci or slot, and verify that none of the children under a
    PHB are display adapters when trying to add or remove a PHB.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit aef0c5daa20f38b66e5fa0255ecf5a53ba202138
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Mon Nov 16 16:26:01 2015 -0500

    drmgr: Move check for non-hotplug children to common routine
    
    In more than one place we check to see if a PHB has any children that
    are not hotplug capable. Move this code to common routine.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 2d8ad5ef33948f07e3022c601ee99cd8efc85a76
Author: Chandni Verma <chandni@linux.vnet.ibm.com>
Date:   Mon Nov 16 16:22:19 2015 -0500

    activate_firmware: Have man page reflect the changes made in this branch
    
    -Edited description
    -added Option section
    -Added 2 new return codes 7 and 8
    
    Signed-off-by: Chandni Verma <chandni@linux.vnet.ibm.com>

commit 11041ab9e8f0e75b58d2c1a593c9c410d7a82f00
Author: Chandni Verma <chandni@linux.vnet.ibm.com>
Date:   Mon Nov 16 16:21:02 2015 -0500

    activate_fw: Return code 8, to report a parameter error when activating firm
    
    This is a new return code mapped from rtas return code -3 which is returned 
    case of parameter error, when the utility is used without options.
    
    Signed-off-by: Chandni Verma <chandni@linux.vnet.ibm.com>

commit d1217de2906f22dbeed54f52c683f28ffcfe90c9
Author: Chandni Verma <chandni@linux.vnet.ibm.com>
Date:   Mon Nov 16 16:19:56 2015 -0500

    activate_fw: get update access key expiry date, set update access key
    
    This patch provides two feature extensions:
    1. activate_firmware -e
       (with only -e, fetches the update access key expiry date)
    2. activate_firmware -e /path/to/keyfile
       (with an argument to -e applies the provided update access key-file to
        extend the update access key expiry date)
    
    These are required to provide an interface to check validity of and
    update the Update Access Key. ESA will be one of the users of this tool.
    
    Signed-off-by: Chandni Verma <chandni@linux.vnet.ibm.com>

commit 097c16987a65aceb0be6d66befaa0104b518abbd
Author: Chandni Verma <chandni@linux.vnet.ibm.com>
Date:   Mon Nov 16 16:18:09 2015 -0500

    activate_fw.c: Make use of errx() to print error messages to stderr and exit
    
    This is a more compact way to do it compared to using fprintf and explicitly
    exiting in main()
    
    Signed-off-by: Chandni Verma <chandni@linux.vnet.ibm.com>

commit c2dc2191bb5963b09e781b78cbf2a152520c8e87
Author: Chandni Verma <chandni@linux.vnet.ibm.com>
Date:   Mon Nov 16 16:17:21 2015 -0500

    activate_fw.c: Factor out activate_firmware() from main()
    
    This is done to reserve main solely for option processing and to
    abstract out rtas calling function.
    
    Signed-off-by: Chandni Verma <chandni@linux.vnet.ibm.com>

commit 72bc893a5f4b59d0e7742726e85f3cffab65ebd3
Author: Chandni Verma <chandni@linux.vnet.ibm.com>
Date:   Mon Nov 16 16:14:46 2015 -0500

    activate_fw: fix typo
    
    The default case in error handler should return code 6, not 4.
    
    Signed-off-by: Chandni Verma <chandni@linux.vnet.ibm.com>

commit 782445384c165ea28f00c9cb233e41bdeef7a962
Author: Chandni Verma <chandni@linux.vnet.ibm.com>
Date:   Mon Nov 16 15:53:42 2015 -0500

    activate_fw: Coding style fixes
    
    This patch fixes trailing white spaces and indentation issues
    and in general makes to code confirm to linux's checkpatch.pl
    
    Signed-off-by: Chandni Verma <chandni@linux.vnet.ibm.com>

commit ad93027170afe3b7bc760fed0ab3e078390ba088
Author: Nathan Fontenot <nfont@linux.vnet.ibnm.com>
Date:   Tue Oct 27 16:58:44 2015 -0400

    serv_config: Compile warning cleanups
    
    Correct several compile warnings.
    
    Remove unchecked return code from execv().
    Remove unused variables.
    Correct de-reference of type punned pointers.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 8ad7081b5f1d98593c8192d4d46c10050e5b8d88
Author: Nathan Fontenot <nfont@linux.vnet.ibnm.com>
Date:   Tue Oct 27 16:57:34 2015 -0400

    rtas_ibm_get_vpd: Compile warning cleanups
    
    Clean up compile warning by removing the unused lflag variable.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 28aeacd59e0e35753bae243cf63150f6ecc2a10b
Author: Nathan Fontenot <nfont@linux.vnet.ibnm.com>
Date:   Tue Oct 27 16:56:32 2015 -0400

    rtas_dbg: Compile warning cleanups
    
    Correct compile errors to check the return value from a fread() call and
    add an appropriate error message, and ensuring we do not use an
    uninitialized 'rc' variable.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit dfab2e6f11a11e25da342b703bd054aaf906d818
Author: Nathan Fontenot <nfont@linux.vnet.ibnm.com>
Date:   Tue Oct 27 16:55:33 2015 -0400

    ppc64_cpu: Compile warning cleanups
    
    Correct compile warning for dereference of type punned pointer.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 92fd02382fbec464562e2a84841391f09cf1e2ea
Author: Nathan Fontenot <nfont@linux.vnet.ibnm.com>
Date:   Tue Oct 27 16:54:34 2015 -0400

    nvram: Compile warning cleanups
    
    Correct compile warning by removing the unused variable memctrl_data.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit f069a159755b70bf4596b2bcce5b3fb4f8c3831f
Author: Nathan Fontenot <nfont@linux.vnet.ibnm.com>
Date:   Tue Oct 27 16:53:35 2015 -0400

    lparstat: Compile warning cleanups
    
    Clean up compile warnings by adding checks for the return codes from
    fgets() calls and adding appropriate error messages.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 2cc2e6590a43a367ee6ca6474bc98cc0a7245caf
Author: Nathan Fontenot <nfont@linux.vnet.ibnm.com>
Date:   Tue Oct 27 16:51:59 2015 -0400

    drmgr: Compile warning cleanups
    
    Fix multiple warnings generated when compiling drmgr code. These include
    not checking return codes of fread() and write() calls where a check is
    added and appropriate error messages.
    
    Updating print formats to use the appropriate type of value being printed.
    
    Correcting the use of rc values to ensure the rc variable is set.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 0e8d1534f5bf57798b74584b6f2b42bad57ddf89
Author: Nathan Fontenot <nfont@linux.vnet.ibnm.com>
Date:   Tue Oct 27 16:49:57 2015 -0400

    drmgr: Validate the status of a CPU before adding or removing it
    
    When asked to perform a CPU DLPAR operation we should verify the current
    status of the CPU before performing the operation. Failure to verify the
    status has caused the kernel to oops in cases where we try to add a CPU
    that is already owned, namely in a kvm guest the following is seen.

    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit dabc0264a9f3b64226da63421378ed02f2f1b201
Author: Nathan Fontenot <nfont@linux.vnet.ibnm.com>
Date:   Tue Oct 27 16:48:25 2015 -0400

    drmgr: Add missing free's of allocated memory
    
    Using valgrind to do analysis of the memory usage of the drmgr command
    revealed multiple instances of memory not being free'ed. Correct this
    by adding appropriate calls to free commands.
    
    Note that the analysis done, and this patch, does not cover all of the code
    paths in drmgr. There may be additional patches as testing continues.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit d5a1c1bfae839e159ba049736a9719835e2a42e6
Author: Nathan Fontenot <nfont@linux.vnet.ibnm.com>
Date:   Tue Oct 27 16:45:26 2015 -0400

    drmgr: Add EXTRA_DEBUG output level
    
    Introduce a new internal developer debug output level. In some cases the
    drmgr command dumps all the information about slots/adapters it gathers
    from the device tree, this is really meant for internal debugging purposes.
    Additionally, one large systems this information can easily overwhelm
    the output seen from drmgr.
    
    This patches introduces a debug level for the say() command, EXTRA_DEBUG.
    Developers can get this output by using the option '-d 5'. Several
    instances of debug output are also updated to use this new option.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit a7ebbd4bbc61cd0c7d6c3c3eea9f7ea9724558d9
Author: Nathan Fontenot <nfont@linux.vnet.ibnm.com>
Date:   Tue Oct 27 16:43:25 2015 -0400

    drmgr: free slot nodes before adding slots
    
    When handling a request for slot dlpar add the device tree is parsed twice,
    once prior to the add and again after adding the slot. On systems with a
    large number of slot devices, 200+, we are seeing that the drmgr command
    segfaults when trying to parse the device tree the second time.

    To avoid crashing here we need to free the parsed information from the
    device tree prior to adding the new slot. While this isn't really a true
    root cause fix it does alloow drmgr to run without segfaulting.
    
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>

commit 767e3dd780f1a18b2c832b5d8db82a5aac9a9818
Author: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
Date:   Fri Oct 16 10:01:50 2015 -0400

    update_flash: Add support for OpenPower system
    
    On OpenPower system we use IPMI interface to pass image to service processor
    (BMC) and it will take care of updating FW.
    
    This patch adds wrapper around ipmitool so that we can use update_flash
    command to update FW.
    
    Validation:
      BMC take care of validating image. We just pass the image to BMC.
    
    Commit/Reject operation:
      Like FSP system, BMC has two sides. Golden and boot side. Golden side
      is permanent and is never updated in the field. So commit/reject
      operations are not allowed on BMC based system.
    
    FW update:
      OpenPower system has two components (BMC FW and host FW). We send all
      the component to BMC in one command. BMC will take care of updating
      all the components.
      Note that we are not using "force" option. So BMC will skip the component
      which are not changed.
    
    FW version display:
      We display host FW version using ipmitool fru command. like below:
        Product Name          : OpenPOWER Firmware
        Product Version       : IBM-firestone-ibm-OP8_PFD_v1.6_0.29
        Product Extra         : hostboot-6847d73-b8d7c0a
        Product Extra         : occ-0726e69
        Product Extra         : skiboot-5.1.3-6221bd2
        Product Extra         : hostboot-binaries-43d5a59
        Product Extra         : firestone-xml-db1a93e-4ae8032
        Product Extra         : capp-ucode-105cb8f
    
    Signed-off-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>

commit 1422abed03f78866339a7b29e3eba4b2d29cb468
Author: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
Date:   Fri Oct 16 10:01:04 2015 -0400

    update_flash_nv: Add platform check
    
    Presently we assume this script is running on FSP based PowerNV platform.
    Lets add platform check to validate platform before running. That way
    adding new platform support (like OpenPower) becomes easy.
    
    Signed-off-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
    Reviewed-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>

commit b7d4678e0963ff4956d02188fae33cb8d5a7fe11
Author: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
Date:   Fri Oct 16 10:00:28 2015 -0400

    update_flash_nv: Rename function name to reflect platform
    
    Presently update_flash_nv supports code update on FSP based PowerNV
    (Non-Virtualized) platform. We want to support code update on OpenPower
    (BMC based) platform. Code update procedure on OpenPower system is
    different than FSP based machine. Hence rename FSP specific function
    in this script as fsp_*.
    
    Signed-off-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
    Reviewed-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>

commit a3e1c3eddb6e3486ae48dfd23f0c95c4b714322d
Author: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
Date:   Fri Oct 16 09:59:06 2015 -0400

    snap: Warn users about deprecated support for SLES 12 onwards
    
    This patch introduce deprecated warning on SLES 12 onwards
    to use supportconfig. supportconfig captures all the information
    collected by snap, so it safe to deprecate snap.
    
    It also rearranges check for distribution (RHEL/SLES/Ubuntu) into
    common function check_distro_support().
    
    Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
    Cc: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
    Cc: Nathan Fontenot <nfont@linux.vnet.ibm.com>

